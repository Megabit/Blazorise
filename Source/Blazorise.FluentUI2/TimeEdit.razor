@using System.Text
@typeparam TValue
@inherits Blazorise.TimeEdit<TValue>
<span class="@InputClassNames">
    <input @ref="@ElementRef" id="@ElementId" type="time" class="@ClassNames" style="@StyleNames" disabled="@Disabled" readonly="@ReadOnly" pattern="@Pattern" value="@CurrentValueAsString" tabindex="@TabIndex" step="@Step" @onchange="@OnChangeHandler" placeholder="@Placeholder" @onkeydown="@OnKeyDownHandler" @onkeypress="@OnKeyPressHandler" @onkeyup="@OnKeyUpHandler" @onblur="@OnBlurHandler" @onfocus="@OnFocusHandler" @onfocusin="@OnFocusInHandler" @onfocusout="@OnFocusOutHandler" @attributes="@Attributes" />
    @* <span class="fui-Input__contentAfter" aria-expanded="false" role="button" aria-label="Open" aria-labelledby="timepicker-chevron-648 field-645__label" tabindex="-1">
        <svg fill="currentColor" class="fui-Input__contentAfter-icon" aria-hidden="true" width="1em" height="1em" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M15.85 7.65c.2.2.2.5 0 .7l-5.46 5.49a.55.55 0 0 1-.78 0L4.15 8.35a.5.5 0 1 1 .7-.7L10 12.8l5.15-5.16c.2-.2.5-.2.7 0Z" fill="currentColor"></path></svg>
    </span> *@
</span>
@ChildContent
@Feedback
@code {
    string InputClassNames
    {
        get
        {
            var sb = new StringBuilder( "fui-Input" );

            if ( ParentValidation?.Status == ValidationStatus.Error )
            {
                sb.Append( " fui-Input__error" );
            }
            else if ( ParentValidation?.Status == ValidationStatus.Success )
            {
                sb.Append( " fui-Input__success" );
            }

            if ( Size is not null && Size != Blazorise.Size.Default )
            {
                sb.Append( $" fui-Input-{ClassProvider.ToSize( Size ?? Blazorise.Size.Default )}" );
            }

            if ( Disabled )
            {
                sb.Append( " disabled" );
            }

            return sb.ToString();
        }
    }
}