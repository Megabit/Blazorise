@using System.Text
@inherits Blazorise.ColorEdit
@if ( ParentIsAddons )
{
    <span class="@AddonClassNames">
        @InputElement
    </span>
}
else
{
    <span class="@InputClassNames">
        @InputElement
    </span>
}
@ChildContent
@Feedback
@code {
    private RenderFragment InputElement => __builder =>
    {
        <input @ref="@ElementRef" id="@ElementId" type="color" class="@ClassNames" style="@StyleNames" disabled="@Disabled" readonly="@ReadOnly" value="@CurrentValueAsString" tabindex="@TabIndex" @onchange="@OnChangeHandler" @onkeydown="@OnKeyDownHandler" @onkeypress="@OnKeyPressHandler" @onkeyup="@OnKeyUpHandler" @onblur="@OnBlurHandler" @onfocus="@OnFocusHandler" @onfocusin="@OnFocusInHandler" @onfocusout="@OnFocusOutHandler" @attributes="@Attributes" />
    };

    string AddonClassNames
    {
        get
        {
            return "fui-Input__content";
        }
    }

    string InputClassNames
    {
        get
        {
            var sb = new StringBuilder( "fui-Input" );

            if ( ParentValidation?.Status == ValidationStatus.Error )
            {
                sb.Append( " fui-Input__error" );
            }
            else if ( ParentValidation?.Status == ValidationStatus.Success )
            {
                sb.Append( " fui-Input__success" );
            }

            if ( ThemeSize != Blazorise.Size.Default )
            {
                sb.Append( $" fui-Input-{ClassProvider.ToSize( ThemeSize )}" );
            }

            if ( Disabled )
            {
                sb.Append( " disabled" );
            }

            return sb.ToString();
        }
    }
}