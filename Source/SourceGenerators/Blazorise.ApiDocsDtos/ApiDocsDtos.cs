
namespace Blazorise;

/// will be removed in package (specified in csproj)
/// Necessary dtos for working with api docs.
/// Can be generated by Source generator, but needs to be done after Blazorise.Extensions are solved.
/// This almost keeps parity with ApiDocsDtos in sg project.
public class ApiDocsForComponent
{
    public ApiDocsForComponent( Type type, List<ApiDocsForComponentProperty> properties, List<ApiDocsForComponentMethod> methods )
    {
        Type = type;
        Properties = properties;
        Methods = methods;
    }
    public Type Type { get; set; }
    public List<ApiDocsForComponentProperty> Properties { get; set; } 
    public List<ApiDocsForComponentMethod> Methods { get; set; } 

}

public class ApiDocsForComponentProperty
{
    public ApiDocsForComponentProperty( string name, Type type, string typeName, object defaultValue, string defaultValueString, string description, bool isBlazoriseEnum )
    {
        Name = name;
        Type = type;
        TypeName = typeName;
        DefaultValue = defaultValue;
        DefaultValueString = defaultValueString;
        Description = description;
        IsBlazoriseEnum = isBlazoriseEnum;
    }
    public string Name { get; set; }
    public Type Type { get; set; }
    public string TypeName { get; set; }
    public object DefaultValue { get; set; }
    public string DefaultValueString { get; set; }
    public string Description { get; set; }
    public bool IsBlazoriseEnum { get; set; }
}

public class ApiDocsForComponentMethod
{
    public ApiDocsForComponentMethod( string name, string returnTypeName, string description, IReadOnlyList<ApiDocsForComponentMethodParameter> parameters )
    {
        Name = name;
        ReturnTypeName = returnTypeName;
        Description = description;
        Parameters = parameters;
    }
    public string Name { get; set; }
    // public Type ReturnTypeSymbol { get; set; }
    public string ReturnTypeName { get; set; }
    public string Description { get; set; }
    
    public IReadOnlyList<ApiDocsForComponentMethodParameter> Parameters { get; set; }
    // public bool IsStatic { get; set; }
    // public bool IsAsync { get; set; }
}

public class ApiDocsForComponentMethodParameter
{
    public ApiDocsForComponentMethodParameter( string name, string typeName )
    {
        Name = name;
        TypeName = typeName;
    }
    public string Name { get; set; }
    // public Type Type { get; set; }
    public string TypeName { get; set; }
//     public string Description { get; set; }
//     public bool IsOptional { get; set; }
//     public object DefaultValue { get; set; }
//     public string DefaultValueString { get; set; }
}





