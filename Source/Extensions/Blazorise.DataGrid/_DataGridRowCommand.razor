@typeparam TItem
@inherits _BaseDataGridRowCommand<TItem>
@if ( EditState == DataGridEditState.Edit )
{
    <TableRowCell>
        @if ( ParentDataGrid?.CommandColumn?.SaveCommandTemplate != null )
        {
            @ParentDataGrid.CommandColumn.SaveCommandTemplate( new CommandContext<TItem>
            {
                Clicked = Save,
                Item = Item,
            } )
        }
        else
        {
            <Button Color="Color.Link" Clicked="@Save">Save</Button>
        }
    </TableRowCell>
    <TableRowCell>
        @if ( ParentDataGrid?.CommandColumn?.CancelCommandTemplate != null )
        {
            @ParentDataGrid.CommandColumn.CancelCommandTemplate( new CommandContext<TItem>
            {
                Clicked = Cancel,
                Item = Item,
            } )
        }
        else
        {
            <Button Color="Color.Link" Clicked="@Cancel">Cancel</Button>
        }
    </TableRowCell>
}
else if ( EditState == DataGridEditState.None )
{
    <TableRowCell>
        @if ( ParentDataGrid?.CommandColumn?.EditCommandTemplate != null )
        {
            @ParentDataGrid.CommandColumn.EditCommandTemplate( new CommandContext<TItem>
            {
                Clicked = Edit,
                Item = Item,
            } )
        }
        else
        {
            <Button Color="Color.Link" Clicked="@Edit">Edit</Button>
        }
    </TableRowCell>
    <TableRowCell>
        @if ( ParentDataGrid?.CommandColumn?.DeleteCommandTemplate != null )
        {
            @ParentDataGrid.CommandColumn.DeleteCommandTemplate( new CommandContext<TItem>
            {
                Clicked = Delete,
                Item = Item,
            } )
        }
        else
        {
            <Button Color="Color.Link" Clicked="@Delete">Delete</Button>
        }
    </TableRowCell>
}