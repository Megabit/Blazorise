@typeparam TItem
@inherits _BaseDataGridRow<TItem>
@{
    var styling = new DataGridRowStyling();
    var selectedStyling = new DataGridRowStyling { Color = Blazorise.Color.Primary };

    @if ( IsSelected )
    {
        ParentDataGrid.SelectedRowStyling?.Invoke( Item, selectedStyling );
    }
    else
    {
        ParentDataGrid.RowStyling?.Invoke( Item, styling );
    }

    <TableRow Clicked="@HandleClick"
              DoubleClicked="@HandleDoubleClick"
              Background="@GetBackground(styling, selectedStyling)"
              Color="@GetColor(styling, selectedStyling)"
              Class="@GetClass(styling, selectedStyling)"
              Style="@GetStyle(styling, selectedStyling)"
              HoverCursor="@GetHoverCursor()">
        @foreach ( var column in Columns )
        {
            @if ( column.ColumnType == DataGridColumnType.Command )
            {
                @if ( ParentDataGrid.IsCommandVisible )
                {
                    <_DataGridRowCommand TItem="TItem" Item="@Item" EditState="DataGridEditState.None" Column="column" />
                }
            }
            else if ( column.ColumnType == DataGridColumnType.MultiSelect )
            {
                @if ( ParentDataGrid.MultiSelect )
                {
                    <_DataGridRowMultiSelect @ref="multiSelect" TItem="TItem" Item="Item" Checked="@IsSelected" CheckedClicked="@OnMultiSelectCheckClicked" Column="column" />
                }
            }
            else
            {
                <TableRowCell Class="@column.CellClass?.Invoke(Item)" Style="@column.BuildCellStyle(Item)" TextAlignment="@column.TextAlignment" VerticalAlignment="@column.VerticalAlignment">
                    @if ( column.DisplayTemplate != null )
                    {
                        @column.DisplayTemplate( Item )
                    }
                    else if ( ParentDataGrid.EmptyCellTemplate != null && column.GetValue( Item ) == null )
                    {
                        @ParentDataGrid.EmptyCellTemplate( Item )
                    }
                    else
                    {
                        @column.FormatDisplayValue( Item )
                    }
                </TableRowCell>
            }
        }
    </TableRow>
}