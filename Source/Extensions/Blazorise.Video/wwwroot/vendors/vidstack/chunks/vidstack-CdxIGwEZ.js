import{aj as m,z as p,ak as g,al as l,p as v,am as y,e as A,af as h,o as r,r as w,a8 as d,F as u,a9 as I,i as L,an as x}from"./vidstack-9sLhInZa.js";import{u as M}from"./vidstack-7n6mvK4o.js";class O extends g{#t=null;#e=!1;#s=null;constructor(t){super(t),this.#e=t.type===l.ATTRIBUTE||t.type===l.BOOLEAN_ATTRIBUTE}render(t){return t!==this.#t&&(this.disconnected(),this.#t=t,this.isConnected&&this.#i()),this.#t?this.#n(v(this.#t)):y}reconnected(){this.#i()}disconnected(){this.#s?.(),this.#s=null}#i(){this.#t&&(this.#s=A(this.#c.bind(this)))}#n(t){return this.#e?h(t):t}#o(t){this.setValue(this.#n(t))}#c(){this.#o(this.#t?.())}}function f(n){return m(O)(p(n))}class b{#t;#e;elements=new Set;constructor(t,s){this.#t=t,this.#e=s}connect(){this.#i();const t=new MutationObserver(this.#s);for(const s of this.#t)t.observe(s,{childList:!0,subtree:!0});r(()=>t.disconnect()),r(this.disconnect.bind(this))}disconnect(){this.elements.clear()}assign(t,s){w(t)?(s.textContent="",s.append(t)):(d(null,s),d(t,s)),s.style.display||(s.style.display="contents");const i=s.firstElementChild;if(!i)return;const e=s.getAttribute("data-class");e&&i.classList.add(...e.split(" "))}#s=u(this.#i.bind(this));#i(t){if(t&&!t.some(e=>e.addedNodes.length))return;let s=!1,i=this.#t.flatMap(e=>[...e.querySelectorAll("slot")]);for(const e of i)!e.hasAttribute("name")||this.elements.has(e)||(this.elements.add(e),s=!0);s&&this.#e(this.elements)}}let T=0,a="data-slot-id";class ${#t;slots;constructor(t){this.#t=t,this.slots=new b(t,this.#s.bind(this))}connect(){this.slots.connect(),this.#s();const t=new MutationObserver(this.#e);for(const s of this.#t)t.observe(s,{childList:!0});r(()=>t.disconnect())}#e=u(this.#s.bind(this));#s(){for(const t of this.#t)for(const s of t.children){if(s.nodeType!==1)continue;const i=s.getAttribute("slot");if(!i)continue;s.style.display="none";let e=s.getAttribute(a);e||s.setAttribute(a,e=++T+"");for(const o of this.slots.elements){if(o.getAttribute("name")!==i||o.getAttribute(a)===e)continue;const c=document.importNode(s,!0);i.includes("-icon")&&c.classList.add("vds-icon"),c.style.display="",c.removeAttribute("slot"),this.slots.assign(c,o),o.setAttribute(a,e)}}}}function S({name:n,class:t,state:s,paths:i,viewBox:e="0 0 32 32"}){return I`<svg
    class="${"vds-icon"+(t?` ${t}`:"")}"
    viewBox="${e}"
    fill="none"
    aria-hidden="true"
    focusable="false"
    xmlns="http://www.w3.org/2000/svg"
    data-icon=${h(n??s)}
  >
    ${L(i)?x(i):f(i)}
  </svg>`}class N{#t={};#e=!1;slots;constructor(t){this.slots=new b(t,this.#i.bind(this))}connect(){this.slots.connect()}load(){this.loadIcons().then(t=>{this.#t=t,this.#e=!0,this.#i()})}*#s(){for(const t of Object.keys(this.#t)){const s=`${t}-icon`;for(const i of this.slots.elements)i.name===s&&(yield{icon:this.#t[t],slot:i})}}#i(){if(this.#e)for(const{icon:t,slot:s}of this.#s())this.slots.assign(t,s)}}class C extends N{connect(){super.connect();const{player:t}=M();if(!t.el)return;let s,i=new IntersectionObserver(e=>{e[0]?.isIntersecting&&(s?.(),s=void 0,this.load())});i.observe(t.el),s=r(()=>i.disconnect())}}export{f as $,S as I,C as L,$ as S};
