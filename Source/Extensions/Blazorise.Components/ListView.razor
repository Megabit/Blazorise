@using Microsoft.AspNetCore.Components.Web.Virtualization
@typeparam TItem
<ListGroup Class="@ListGroupClassNames" Style="@ListGroupStyleNames" Flush="@Flush" Scrollable="@Scrollable" Mode="@Mode" SelectedItem="@GetItemValue( SelectedItem )" SelectedItemChanged="@SelectedListGroupItemChanged" Attributes="@Attributes">
    @if ( Data != null )
    {
        @if ( Virtualize && Data is ICollection<TItem> collectionableData )
        {
            <Virtualize TItem="TItem" Context="item" Items="@collectionableData">
                @itemFragment(item)
            </Virtualize>
        }
        else
        {
            @foreach ( var item in Data ?? Enumerable.Empty<TItem>() )
            {
                @itemFragment(item)
            }
        }
    }
    @ChildContent
</ListGroup>
@code {
    protected RenderFragment<TItem> itemFragment => item => __builder =>
    {
        var itemText = GetItemText( item );
        var itemValue = GetItemValue( item );
        @if ( ItemTemplate is not null )
        {
            <ListGroupItem @key="item" Name="@itemValue">@ItemTemplate( new( item, itemText, itemValue ) )</ListGroupItem>
        }
        else
        {
            <ListGroupItem @key="item" Name="@itemValue">@itemText</ListGroupItem>
        }
    };
}