@typeparam TNode
@inherits BaseComponent
<CascadingValue Value="@this" IsFixed>
    <div class="@ClassNames" style="@StyleNames" @attributes="@Attributes">
        @foreach ( var nodeState in NodeStates ?? Enumerable.Empty<TreeViewNodeState<TNode>>() )
        {
            bool hasChildren = HasChildNodes( nodeState.Node );

            <div @key="@nodeState.Key">
                @if ( hasChildren )
                {
                    <span class="tree-view-icon" @onclick="@(() => ToggleNode(nodeState))">
                        @if ( nodeState.Expanded )
                        {
                            <Icon Name="@CollapseIconName" IconStyle="@CollapseIconStyle" IconSize="@CollapseIconSize" />
                        }
                        else
                        {
                            <Icon Name="@ExpandIconName" IconStyle="@ExpandIconStyle" IconSize="@ExpandIconSize" />
                        }
                    </span>
                }

                <_TreeViewNodeContent TNode="TNode" NodeState="@nodeState"
                                      NodeStyling="@(ResolveNodeStylingAction(NodeStyling))"
                                      SelectedNodeStyling="@(ResolveNodeStylingAction(SelectedNodeStyling))">
                    @NodeContent( nodeState.Node )
                </_TreeViewNodeContent>

                @if ( nodeState.Expanded && hasChildren )
                {
                    <_TreeViewNode @ref="@nodeState.ViewRef"
                                   Nodes="@GetChildNodes(nodeState.Node)"
                                   NodeContent="NodeContent"
                                   GetChildNodes="GetChildNodes"
                                   ExpandedNodes="ExpandedNodes"
                                   ExpandedNodesChanged="ExpandedNodesChanged"
                                   Expanded="nodeState.Expanded"
                                   HasChildNodes="HasChildNodes"
                                   NodeStyling="@(ResolveNodeStylingAction(NodeStyling))"
                                   SelectedNodeStyling="@(ResolveNodeStylingAction(SelectedNodeStyling))"
                                   ExpandIconName="@ExpandIconName"
                                   ExpandIconStyle="@ExpandIconStyle"
                                   CollapseIconName="@CollapseIconName"
                                   CollapseIconStyle="@CollapseIconStyle" />
                }
            </div>
        }
    </div>
</CascadingValue>