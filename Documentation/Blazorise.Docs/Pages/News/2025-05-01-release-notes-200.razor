@page "/news/release-notes/200"

<Seo Canonical="news/release-notes/200" Title="Blazorise v2.0" Description="Welcome to the Blazorise 2.0 release, packed with exciting new features, optimizations, and support for the latest .NET framework." ImageUrl="img/news/200/v200.png" />

<NewsPageImage Source="img/news/200/v200.png" Text="Blazorise v2.0" />

<NewsPageTitle>
    Announcing Blazorise 2.0 - [CodeName]
</NewsPageTitle>

<Paragraph>
    Welcome to the Blazorise 2.0 release, packed with exciting new features, optimizations, and support for the latest .NET framework. Dive into the highlights below to explore how Blazorise 2.0 can enhance your applications.
</Paragraph>

<NewsPageSubtitle>
    Key Blazorise 1.0 Highlights 💡
</NewsPageSubtitle>

<Paragraph>
    Here's a summary of what's new in this release:
</Paragraph>

<UnorderedList>
    <UnorderedListItem>
        <Paragraph>
            <Strong>DataGridSelectColumn</Strong>: Multiple support
        </Paragraph>
    </UnorderedListItem>
</UnorderedList>

<Paragraph>
    Dive into each section for a comprehensive overview of these features and learn how they can enhance your projects. We value your feedback and encourage you to share your thoughts as we continue to refine and improve Blazorise.
</Paragraph>

<NewsPageSubtitle>
    Upgrading from 1.7.x to 2.0 👨‍🔧
</NewsPageSubtitle>

<Paragraph>
    Upgrade your Blazorise application seamlessly with the following steps:
</Paragraph>

<OrderedList>
    <OrderedListItem>
        <Paragraph>
            Update all <Strong>Blazorise.*</Strong> package references to <Strong>2.0</Strong>.
        </Paragraph>
    </OrderedListItem>
    <OrderedListItem>
        <Paragraph>
            Blazorise should now work without any major breaking change to the API, but there are some necessary changes that we had to do to make Blazorise better. Continue reading the Migration section for more details.
        </Paragraph>
    </OrderedListItem>
</OrderedList>

<NewsPageSubtitle>
    Migration Notes 🛠
</NewsPageSubtitle>

<Paragraph>
    A few API changes and behavior updates have been introduced in Blazorise 2.0 to improve consistency and functionality. Here’s a summary:
</Paragraph>

<Paragraph>
    <OrderedList>
        <OrderedListItem>
            <Paragraph>
                Support for using <Code Tag>Collapse</Code> inside an <Code Tag>Accordion</Code> has been removed.
            </Paragraph>
            <UnorderedList>
                <UnorderedListItem>
                    <Paragraph>
                        Since version 1.5, placing a <Code Tag>Collapse</Code> inside an <Code Tag>Accordion</Code> is not recommended.
                        Accordion now works as expected only with accordion components such as <Code Tag>AccordionItem</Code>, <Code Tag>AccordionBody</Code> and <Code Tag>AccordionHeader</Code>.
                    </Paragraph>
                </UnorderedListItem>
            </UnorderedList>
        </OrderedListItem>
        <OrderedListItem>
            <Paragraph>
                <Strong>DataGrid</Strong>
            </Paragraph>
            <UnorderedList>
                <UnorderedListItem>
                    <Paragraph>
                        <Code>CurrentPage</Code> becomes <Code>Page</Code>, and this parameter supports two-way binding using <Code>@@bind-Page="currentPage"</Code>.
                        The rename also happened on <Code Tag>PaginationContext</Code> properties <Code>CurrentPageSize</Code> and <Code>CurrentPage</Code>. They have now been renamed to <Code>PageSize</Code> and <Code>Page</Code>, respectively.
                        <Code>DataGridState.CurrentPage</Code> has been also renamed to <Code>Page</Code>.
                    </Paragraph>
                </UnorderedListItem>
                <UnorderedListItem>
                    <Paragraph>
                        <Code>DataGridPageChangedEventArgs</Code> has been removed as it served no purpose. Now, the <Code>PageChanged</Code> event returns a simple <Code>int</Code> representing the current page number.
                    </Paragraph>
                </UnorderedListItem>
            </UnorderedList>
        </OrderedListItem>
        <OrderedListItem>
            <Paragraph>
                Renaming <Code>RightAligned</Code> to <Code>EndAligned</Code> in <Code Tag>Dropdown</Code>, and <Code Tag>DropdownList</Code>
            </Paragraph>
            <UnorderedList>
                <UnorderedListItem>
                    <Paragraph>
                        The <Code>RightAligned</Code> parameter in the <Code Tag>Dropdown</Code> and <Code Tag>DropdownList</Code> components has been renamed to <Code>EndAligned</Code> to align with the convention of using "Start" and "End" for alignment properties.
                    </Paragraph>
                </UnorderedListItem>
            </UnorderedList>
        </OrderedListItem>
        <OrderedListItem>
            <Paragraph>
                <Strong>Steps</Strong>
            </Paragraph>
            <UnorderedList>
                <UnorderedListItem>
                    <Paragraph>
                        Methods used for moving steps no longer guarantee the step will be moved. This is reflected in their return value of <Code>bool</Code>.
                        The <Code>NavigationAllowed</Code> function is always invoked (if implemented) and determines whether navigation is permitted.
                        You can implement <Code>NavigationAllowed</Code> to return a <Code>bool</Code> based on your own logic.
                    </Paragraph>
                </UnorderedListItem>
                <UnorderedListItem>
                    <Paragraph>
                        The <Code>NavigationAllowed</Code> function is now asynchronous, returning <Code>Task&lt;bool&gt;</Code> instead of <Code>bool</Code>.
                    </Paragraph>
                </UnorderedListItem>
            </UnorderedList>
        </OrderedListItem>
    </OrderedList>
</Paragraph>

<NewsPageSubtitle>
    New Features & Enhancements 🚀
</NewsPageSubtitle>

<Heading Size="HeadingSize.Is3">
    DataGrid
</Heading>

<Heading Size="HeadingSize.Is4">
    DataGridSelectColumn Multiple support
</Heading>

<Paragraph>
    You may now allow multiple values to be selected in the <Code>DataGridSelectColumn</Code>. Set the new <Code>Multiple</Code> parameter to <Code>true</Code> to enable this feature. Please bind the corresponding array to successfully bind the multiple values.
</Paragraph>

<Heading Size="HeadingSize.Is4">
    ExpressionCompiler
</Heading>

<Paragraph>
    A new DataGrid utility, the <Code>ExpressionCompiler</Code> was introduced.
    This utility allows you to compile expressions and use them in the <Code>DataGrid</Code>.
    The <Code>ExpressionCompiler</Code> can be used together with the <Code>DataGridColumnInfo</Code> collection provided by the <Code>ReadData</Code> in order to create Expression based queries (IQueryables) that can in turn be used in ORMs like Entity Framework.

    Visit <Anchor To="/docs/extensions/datagrid/binding-data/large-data">DataGrid Binding Large Data</Anchor> for more information.
</Paragraph>

<Heading Size="HeadingSize.Is4">
    Two-Way Binding Page Parameter
</Heading>

<Paragraph>
    The <Code>Page</Code> parameter now supports two-way binding, allowing you to synchronize it with a variable using <Code>@@bind-Page="currentPage"</Code>.
</Paragraph>

<Heading Size="HeadingSize.Is3">
    Steps
</Heading>

<Heading Size="HeadingSize.Is4">
    Asynchronous <Code>NavigationAllowed</Code>
</Heading>

<Paragraph>
    The <Code>NavigationAllowed</Code> function in the <Code Tag>Steps</Code> component is now asynchronous.
    It returns <Code>Task&lt;bool&gt;</Code> instead of <Code>bool</Code>, allowing you to execute asynchronous logic
    to determine whether navigation between steps is allowed. This change provides greater flexibility and accommodates
    scenarios where the decision to navigate requires async operations.
</Paragraph>

<Heading Size="HeadingSize.Is3">
    TimePicker
</Heading>

<Paragraph>
    Added support for seconds selection in the <Code>TimePicker</Code> component. To enable this feature, set the new <Code>Seconds</Code> parameter to <Code>true</Code>. This allows users to include seconds in their time input.
</Paragraph>

<Heading Size="HeadingSize.Is3">
    Autocomplete
</Heading>

<Paragraph>
    New parameter <Code>StringComparison</Code> allows you to set the comparison method if the default <Code>OrdinalIgnoreCase</Code> doesn't suit your needs.
</Paragraph>


<NewsPageSubtitle>
    Final Notes
</NewsPageSubtitle>

<Paragraph>
    As always, your feedback is invaluable in guiding future Blazorise development. We encourage you to try out the new features and let us know your thoughts. Thank you for your continued support and enthusiasm for Blazorise, and we look forward to bringing you even more enhancements in future updates!
</Paragraph>

<NewsPagePostInfo UserName="Mladen Macanović" ImageName="mladen" PostedOn="" Read="7 min" />