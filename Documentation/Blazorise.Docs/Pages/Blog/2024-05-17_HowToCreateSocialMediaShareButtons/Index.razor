@page "/blog/how-to-create-social-media-share-buttons"

<Seo Canonical="/blog/how-to-create-social-media-share-buttons" Title="How to create social media share buttons" Description="Discover how to create share buttons for your Blazor app!" ImageUrl="/img/blog/2024-05-17/how-to-create-social-media-share-buttons.png" />

<BlogPageImage Source="/img/blog/2024-05-17/how-to-create-social-media-share-buttons.png" Text="How to create social media share buttons with Blazorise" />

<BlogPageTitle>
    How to create a ShareButton component with Blazorise!
</BlogPageTitle>

<BlogPageParagraph>
    Are you ready to sprinkle some Blazorise magic into your Blazor app? Adding share buttons for social media platforms can give your users an easy way to spread the word about your awesome content. It's easier than you think, thanks to Blazorise!
</BlogPageParagraph>

<BlogPageSubtitle>
    Let's dive in and jazz up your app with these fantastic buttons.
</BlogPageSubtitle>

<BlogPageSubtitle>
    Installing Blazorise
</BlogPageSubtitle>

<BlogPageParagraph>
    You can follow <Anchor To="/blog/how-to-create-a-blazorise-application-beginners-guide" Title="Link to this">this</Anchor> guide to install Blazorise into your project.
</BlogPageParagraph>

<BlogPageSubtitle>
    Adding static files in the index.html
</BlogPageSubtitle>

<BlogPageSourceBlock Code="HowToCreateSocialMediaShareButtons_HeadContent" />

<BlogPageParagraph>
    We can see that we are adding a few links to our head tag, let's break them down:
</BlogPageParagraph>

<BlogPageList>
    <BlogPageListItem>
        The first link, adds a link to BootstrapCSS, this is required in order for our buttons to work! as we are using Bootstrap for this tutorial.
    </BlogPageListItem>
    <BlogPageListItem>
        The rest of the links, add Blazorise's dependencies to the web app. This is also very important!
    </BlogPageListItem>
</BlogPageList>

<BlogPageSubtitle>
    Adding Imports inside of the <Code>_Imports.razor</Code>
</BlogPageSubtitle>

<BlogPageSourceBlock Code="HowToCreateSocialMediaShareButtons_UsingStatement" />

<BlogPageSubtitle>
    Registering services
</BlogPageSubtitle>

<BlogPageParagraph>
    Add the following line at the top of your <Code>Program.cs</Code> file:
</BlogPageParagraph>

<BlogPageSourceBlock Code="HowToCreateSocialMediaShareButtons_ProgramCsUsingStatements" />

<BlogPageParagraph>
    and somewhere inside the file, register Blazorise's services like so:
</BlogPageParagraph>

<BlogPageSourceBlock Code="HowToCreateSocialMediaShareButtons_ServiceRegistration" />

<BlogPageSubtitle>
    Creating the brand record
</BlogPageSubtitle>

<BlogPageParagraph>
    We can create a record, that will hold all the information related to each social media platform we want to support sharing to!
</BlogPageParagraph>

<BlogPageParagraph>
    <Code>Platform.cs</Code>
</BlogPageParagraph>

<BlogPageSourceBlock Code="HowToCreateSocialMediaShareButtons_Platform" />

<BlogPageParagraph>
    <Blockquote>
        If you don't know what records are, you can read about then <Anchor To="https://learn.microsoft.com/en-us/dotnet/csharp/language-reference/builtin-types/record" Title="Link to here">here</Anchor>.
    </Blockquote>
</BlogPageParagraph>

<BlogPageParagraph>
    <Blockquote>
        They are a very useful concept, this is a perfect use for a record - an immutable data class.
    </Blockquote>
</BlogPageParagraph>

<BlogPageSubtitle>
    Creating the ShareButton component
</BlogPageSubtitle>

<BlogPageSourceBlock Code="HowToCreateSocialMediaShareButtons_ShareButtonComponentMarkup" />

<BlogPageSourceBlock Code="HowToCreateSocialMediaShareButtons_ShareButtonComponentCode" />

<BlogPageSubtitle>
    Let's break down the component
</BlogPageSubtitle>

<Heading Size="HeadingSize.Is3">
    Button
</Heading>

<BlogPageParagraph>
    First thing's first, we have the Button component, notice that it is typed as <Strong>B</Strong>utton and not button that is because it is not an ordinary HTML button, it is a Blazorise button component! This means it can take parameters, to allow us to customize it further!
</BlogPageParagraph>

<BlogPageParagraph>
    <Blockquote>
        Just like other Blazorise components, this button is framework-agnostic, meaning you may use Bootstrap, TailwindCSS, or any other supported frameworks!
    </Blockquote>
</BlogPageParagraph>

<Heading Size="HeadingSize.Is3">
    The parameters
</Heading>

<BlogPageParagraph>
    We have just enough parameters to allow for the exact customization necessary,
</BlogPageParagraph>

<BlogPageParagraph>
    Here is a breakdown of what each one does:
</BlogPageParagraph>

<BlogPageList Ordered>
    <BlogPageListItem>
        <Code>Platform</Code> - The platform of the share button. The user will pass the platforms which will are statically defined inside the Platform record.
    </BlogPageListItem>
    <BlogPageListItem>
        <Code>ChildContent</Code> - The markup displayed inside the button. See <Anchor To="https://blazor-university.com/templating-components-with-renderfragements/" Title="Link to blazor-university">blazor-university</Anchor>.
    </BlogPageListItem>
    <BlogPageListItem>
        <Code>Size</Code> - The size of the button, this is a Blazorise class, so we can use Small, Medium, Large etc.
    </BlogPageListItem>
    <BlogPageListItem>
        <Code>AdditionalAttributes</Code> - Any additional attributes the user passes to the button. Will directly be applied to the underlying button component. See <Anchor To="https://blazor-university.com/components/capturing-unexpected-parameters/" Title="Link to blazor-university">blazor-university</Anchor>.
    </BlogPageListItem>
</BlogPageList>

<BlogPageSubtitle>
    Define the brand colors in brands.css
</BlogPageSubtitle>

<BlogPageParagraph>
    Here are some colors, you may expand this further as you need
</BlogPageParagraph>

<BlogPageSourceBlock Code="HowToCreateSocialMediaShareButtons_Brands" />

<BlogPageParagraph>
    <Blockquote>
        The <Code>!important</Code> property, this is necessary as, by default the Bootstrap icons will have the <Code>Color</Code> property set to <Code>primary</Code>, this will shadow our custom background colors, so adding <Code>!important</Code> at the end of them will fix this.
    </Blockquote>
</BlogPageParagraph>

<BlogPageSubtitle>
    Include the brands.css file in your app
</BlogPageSubtitle>

<BlogPageSourceBlock Code="HowToCreateSocialMediaShareButtons_IndexhtmlHeadSection" />

<BlogPageSubtitle>
    Using the ShareButtons!
</BlogPageSubtitle>

<BlogPageParagraph>
    Inside your page, add the freshly created buttons
</BlogPageParagraph>

<BlogPageSourceBlock Code="HowToCreateSocialMediaShareButtons_ShareButtonUsage" />

<BlogPageParagraph>
    <Blockquote>
        Notice how the text inside the button says <Code>Share on</Code> instead of <Code>Share on X</Code>, this is because X's logo is literally the latin letter X, so it would not make sense, so have <Code>Share on X âœ–</Code>
    </Blockquote>
</BlogPageParagraph>

<BlogPageSubtitle>
    Congratulations! You can now create ShareButtons in your web application!
</BlogPageSubtitle>

<BlogPageImageModal ImageSource="img/blog/2024-05-17/share-buttons.png" ImageTitle="Share buttons" />

<BlogPageParagraph>
    Sharing your content with the world is important, it allows your users to show their friends what your page is all about!
</BlogPageParagraph>

<BlogPageParagraph>
    Blazorise makes it easy to develop framework-agnostic UI quickly.
</BlogPageParagraph>

<BlogPageParagraph>
    Thanks for reading! ðŸ’—
</BlogPageParagraph>

<BlogPagePostInto UserName="Giorgi" ImageName="giorgi" PostedOn="May 21st, 2024" Read="5 min" />
