@page "/docs/extensions/cropper"

<Seo Canonical="/docs/extensions/cropper" Title="Blazorise Cropper component" Description="Learn to use and work with the Blazorise Cropper component, which is used to crop images, that works in all major browsers." />

<DocsPageTitle Path="Extensions/Cropper">
    Blazorise Cropper component
</DocsPageTitle>

<DocsPageLead>
    A component used to crop images.
</DocsPageLead>

<DocsPageParagraph>
    When building an application, best practice requires reducing an image's surrounding noise and directing a user's attention to a specific part of the image. Image cropping is a method for manipulating images to remove any unwanted elements. By changing the aspect ratio or orientation, we can draw viewers' eyes to the photograph's primary subject and improve the overall composition. This applies to profile pictures or uploading images with specific dimensions.
</DocsPageParagraph>

<DocsPageParagraph>
    The new <Code>Cropper</Code> component handles all of that. You can upload an image and then select part of it, rotate, scale, and crop it. You can also add a preview by adding a <Code>CropperViewer</Code> whenever on a page, and it will automatically synchronize with the latest selection.
</DocsPageParagraph>

<DocsPageSubtitle>
    Installation
</DocsPageSubtitle>

<DocsPageSection>
    <DocsPageSectionHeader Title="NuGet">
        Install extension from NuGet.
    </DocsPageSectionHeader>
    <DocsPageSectionSource Code="CropperNugetInstallExample" />
</DocsPageSection>

<DocsPageSection>
    <DocsPageSectionHeader Title="Imports">
        In your main <Badge Color="Color.Light">_Imports.razor</Badge> add:
    </DocsPageSectionHeader>
    <DocsPageSectionSource Code="ImportCropperExample" />
</DocsPageSection>

<DocsPageSection>
    <DocsPageSectionHeader Title="Message Size">
        This step is recommended for Blazor Server only. In a default Blazor Server project template, the SignalR settings might be too small for some components like Cropper. To make it work, you should increase the <Code>MaximumReceiveMessageSize</Code> in your projects <Strong>Startup.cs</Strong>.
    </DocsPageSectionHeader>
    <DocsPageSectionSource Code="CropperMessageSizeExample" />
</DocsPageSection>

<DocsPageSubtitle>
    Examples
</DocsPageSubtitle>

<DocsPageSection>
    <DocsPageSectionHeader Title="Basic">
        The image cropper is pretty straightforward. You need to define a Source parameter, and a reference.
    </DocsPageSectionHeader>
    <DocsPageSectionContent Outlined FullWidth>
        <BasicCropperExample />
    </DocsPageSectionContent>
    <DocsPageSectionSource Code="BasicCropperExample" />
</DocsPageSection>

<DocsPageSection>
    <DocsPageSectionHeader Title="Viewer">
        To add a preview support you can use a <Code Tag>CropperViewer</Code> component. Once added you need to connect it to a <Code Tag>Cropper</Code> by assigning the <Code>CropperState</Code> parameter. This parameter is used as a synchronization context bewteen the cropper and a viewer.
    </DocsPageSectionHeader>
    <DocsPageSectionContent Outlined FullWidth>
        <CropperViewerExample />
    </DocsPageSectionContent>
    <DocsPageSectionSource Code="CropperViewerExample" />
</DocsPageSection>

<DocsPageSubtitle>
    API
</DocsPageSubtitle>

<Heading Size="HeadingSize.Is3">
    Attributes
</Heading>

<DocsAttributes Title="Cropper">
    <DocsAttributesItem Name="Ratio" Type="CropperAspectRatio" Default="Is1x1">
        Defines the aspect ratio of the image cropper.
    </DocsAttributesItem>
    <DocsAttributesItem Name="Source" Type="string" Default="null">
        The original image source.
    </DocsAttributesItem>
    <DocsAttributesItem Name="Alt" Type="string" Default="null">
        The alt text of the image.
    </DocsAttributesItem>
    <DocsAttributesItem Name="CropStarted" Type="EventCallback">
        This event fires when the canvas (image wrapper) or the crop box starts to change.
    </DocsAttributesItem>
    <DocsAttributesItem Name="CropMoved" Type="EventCallback">
        This event fires when the canvas (image wrapper) or the crop box is changing.
    </DocsAttributesItem>
    <DocsAttributesItem Name="CropEnded" Type="EventCallback">
        This event fires when the canvas (image wrapper) or the crop box stops changing.
    </DocsAttributesItem>
    <DocsAttributesItem Name="Cropped" Type="EventCallback">
        This event fires when the canvas (image wrapper) or the crop box changes.
    </DocsAttributesItem>
    <DocsAttributesItem Name="Zoomed" Type="EventCallback">
        This event fires when a cropper instance starts to zoom in or zoom out its canvas (image wrapper).
    </DocsAttributesItem>
    <DocsAttributesItem Name="Enabled" Type="bool" Default="true">
        Is the cropper enabled.
    </DocsAttributesItem>
    <DocsAttributesItem Name="CropperState" Type="CropperState" Default="null">
        Provides a shared state and syncronization context between the cropper and cropper viewer.
    </DocsAttributesItem>
    <DocsAttributesItem Name="CrossOrigin" Type="string" Default="null">
        The cross-origin attribute of the image.
    </DocsAttributesItem>
    <DocsAttributesItem Name="ImageReady" Type="Func<Task>" Default="null">
        This event fires when the image is ready / loaded.
    </DocsAttributesItem>
</DocsAttributes>

<DocsAttributes Title="CropperViewer">
    <DocsAttributesItem Name="CropperState" Type="CropperState">
        Provides a shared state and syncronization context between the cropper and cropper viewer.
    </DocsAttributesItem>
</DocsAttributes>

<DocsAttributes Title="CropperCropOptions">
    <DocsAttributesItem Name="Width" Type="int" Default="0">
        The destination width of the output canvas.
    </DocsAttributesItem>
    <DocsAttributesItem Name="Height" Type="int" Default="0">
        The destination height  of the output canvas.
    </DocsAttributesItem>
    <DocsAttributesItem Name="ImageType" Type="string" Default="image/png">
        A string indicating the image format. The default type is <Code>image/png</Code> this image format will be also used if the specified type is not supported.
    </DocsAttributesItem>
    <DocsAttributesItem Name="ImageQuality" Type="double?" Default="1.0">
        A Number between 0 and 1 indicating the image quality to be used when creating images using file formats that support lossy compression (such as image/jpeg or image/webp).
    </DocsAttributesItem>
</DocsAttributes>