<DocsPageSubtitle>
    API
</DocsPageSubtitle>

<Heading Size="HeadingSize.Is3">
    Attributes
</Heading>

@foreach(ApiDocsForComponent apiDocsForComponent in ComponentTypes.Select(x=> ComponentsApiDocsSource.Components.GetValueOrDefault(x)))
{

    <DocsAttributes Title="@apiDocsForComponent.Type.Name">
        @if (apiDocsForComponent?.Properties != null)
        {
            foreach(var property in apiDocsForComponent.Properties.OrderBy(x => x.Name))
            {
                <DocsAttributesItem @key="@property.Name" Name="@property.Name" Type="@property.TypeName" Default="@property.DefaultValueString">
                    @((MarkupString)property.Description)

                    @if (property.IsBlazoriseEnum)
                    {
                        <text>Possible values: </text>
                        for (int i = 0; i < Enum.GetNames(property.Type).Length; i++)
                        {
                            int i1 = i;
                            <Span>@Enum.GetNames(property.Type)[i1]</Span>
                            @(i < Enum.GetNames(property.Type).Length - 1 ? ", " : "")
                        }
                    }
                </DocsAttributesItem>
            }
        }
    </DocsAttributes>
}


@code {
    [Parameter] public List<Type> ComponentTypes { get; set; } = [];

    [Parameter] public bool HideApiHeadings { get; set; }

}