<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
	<PropertyGroup>
		<Version>1.4.2.0</Version>
		<PackageVersion>1.4.2</PackageVersion>

		<PackageLicenseFile>LICENSE.md</PackageLicenseFile>
		<PackageIcon>Blazorise.png</PackageIcon>
		<PackageProjectUrl>https://blazorise.com/</PackageProjectUrl>
		<RepositoryUrl>https://github.com/Megabit/Blazorise</RepositoryUrl>
		<RepositoryType>git</RepositoryType>

		<Description>Blazorise is a component library built on top of Blazor and CSS frameworks like Bootstrap, Bulma and Material.</Description>
		<Authors>Megabit</Authors>
		<Company>Megabit</Company>
		<Copyright>Copyright 2018-2024 Megabit</Copyright>
		
		<TargetFrameworks>net6.0;net7.0;net8.0</TargetFrameworks>
		<OutputType>Library</OutputType>
		<IsPackable>true</IsPackable>
		<LangVersion>10.0</LangVersion>

		<GeneratePackageOnBuild>false</GeneratePackageOnBuild>
		<AddRazorSupportForMvc>true</AddRazorSupportForMvc>
	</PropertyGroup>

	<ItemGroup>
		<SupportedPlatform Include="browser" />		
	</ItemGroup>

    <ItemGroup>
        <Content Remove="package.json" />
        <None Include="package.json" />
    </ItemGroup>

	<PropertyGroup Condition=" '$(TargetFramework)' == 'net6.0' ">
		<DefineConstants>$(DefineConstants);NET6_0</DefineConstants>
	</PropertyGroup>

	<PropertyGroup Condition=" '$(TargetFramework)' == 'net7.0' ">
		<DefineConstants>$(DefineConstants);NET7_0</DefineConstants>
	</PropertyGroup>

	<PropertyGroup Condition=" '$(TargetFramework)' == 'net8.0' ">
		<DefineConstants>$(DefineConstants);NET8_0</DefineConstants>
	</PropertyGroup>

	<ItemGroup Condition=" '$(TargetFramework)' == 'net6.0' ">
		<PackageReference Include="Microsoft.AspNetCore.Components" Version="6.0.*" />
		<PackageReference Include="Microsoft.AspNetCore.Components.Web" Version="6.0.*" />
		<PackageReference Include="Microsoft.Extensions.Logging.Abstractions" Version="6.0.*" />
	</ItemGroup>

	<ItemGroup Condition=" '$(TargetFramework)' == 'net7.0' ">
		<PackageReference Include="Microsoft.AspNetCore.Components" Version="7.0.*" />
		<PackageReference Include="Microsoft.AspNetCore.Components.Web" Version="7.0.*" />
		<PackageReference Include="Microsoft.Extensions.Logging.Abstractions" Version="7.0.*" />
	</ItemGroup>

	<ItemGroup Condition=" '$(TargetFramework)' == 'net8.0' ">
		<PackageReference Include="Microsoft.AspNetCore.Components" Version="8.0.*" />
		<PackageReference Include="Microsoft.AspNetCore.Components.Web" Version="8.0.*" />
		<PackageReference Include="Microsoft.Extensions.Logging.Abstractions" Version="8.0.*" />
	</ItemGroup>

	<UsingTask
	  TaskName="ReplaceVersionInJsFiles"
	  TaskFactory="RoslynCodeTaskFactory"
	  AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.Core.dll">
		<ParameterGroup>
			<SourceFiles ParameterType="Microsoft.Build.Framework.ITaskItem[]" Required="true" />
			<MatchExpression ParameterType="System.String" Required="true" />
			<ReplacementText ParameterType="System.String" Required="true" />
		</ParameterGroup>
		<Task>
			<Using Namespace="System"/>
			<Using Namespace="System.IO"/>
			<Using Namespace="System.Text.RegularExpressions" />
			<Code Type="Fragment" Language="cs">
				<![CDATA[  
				
				Log.LogMessage(MessageImportance.High, $"------ Custom Build Step : ReplaceVersionInJsFiles : [{SourceFiles.Count()}] files ------");
				Log.LogMessage(MessageImportance.High, $"------ Custom Build Step : ReplaceVersionInJsFiles : Match : [{MatchExpression}] | Replace : [{ReplacementText}] ------");
				try {
					foreach (ITaskItem item in SourceFiles)
					{
						string fileName = item.ItemSpec;
						Log.LogMessage(MessageImportance.High, "------ Custom Build Step : ReplaceVersionInJsFiles : Updating File '{0}'.", fileName);
					
						File.WriteAllText(
						fileName,
						Regex.Replace(File.ReadAllText(fileName), MatchExpression, ReplacementText)
						);
					}
				}
				catch (Exception ex)
				{
					Log.LogMessage(MessageImportance.High, $"------ Custom Build Step : ReplaceVersionInJsFiles : Exception : [{ex.Message}] ------");
				}
        ]]>
			</Code>
		</Task>
	</UsingTask>

	<Target Name="BeforeBuildStep" BeforeTargets="Build">
		<ItemGroup>
			<JsFiles Include='wwwroot\*.js' />
		</ItemGroup>

		<ReplaceVersionInJsFiles
		   SourceFiles="@(JsFiles)"
		   MatchExpression="\?v=([\d.]*)"
		   ReplacementText="?v=$(Version)" />
	</Target>
</Project>
