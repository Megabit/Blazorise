@page "/tests/charts"
<Row>
    <Column ColumnSize="ColumnSize.IsThird.OnWidescreen">
        <Card Margin="Margin.Is4.OnY">
            <CardHeader>
                <CardTitle>Line</CardTitle>
            </CardHeader>
            <CardBody>
                <Button Color="Color.Primary" Outline="true" Clicked="@(async () => await HandleRedraw( lineChart, GetLineChartDataset ))">Redraw</Button>
                <Button Color="Color.Primary" Outline="true" Clicked="@(async ()=> await ShiftLineChart())">Shift</Button>
                <Button Color="Color.Primary" Outline="true" Clicked="@(async ()=> await PopLineChart())">Pop</Button>
            </CardBody>
            <CardBody>
                <LineChart @ref="lineChart" TItem="double" />
            </CardBody>
        </Card>
    </Column>
    <Column ColumnSize="ColumnSize.IsThird.OnWidescreen">
        <Card Margin="Margin.Is4.OnY">
            <CardHeader>
                <CardTitle>Bar</CardTitle>
            </CardHeader>
            <CardBody>
                <Button Color="Color.Primary" Outline="true" Clicked="@(async () => await HandleRedraw( barChart, GetBarChartDataset ))">Redraw</Button>
            </CardBody>
            <CardBody>
                <Chart @ref="barChart" Type="ChartType.Bar" TItem="double" />
            </CardBody>
        </Card>
    </Column>
    <Column ColumnSize="ColumnSize.IsThird.OnWidescreen">
        <Card Margin="Margin.Is4.OnY">
            <CardHeader>
                <CardTitle>Pie</CardTitle>
            </CardHeader>
            <CardBody>
                <Button Color="Color.Primary" Outline="true" Clicked="@(async () => await HandleRedraw( pieChart, GetPieChartDataset ))">Redraw</Button>
            </CardBody>
            <CardBody>
                <Chart @ref="pieChart" Type="ChartType.Pie" TItem="double" />
            </CardBody>
        </Card>
    </Column>
</Row>
<Row>
    <Column ColumnSize="ColumnSize.IsThird.OnWidescreen">
        <Card Margin="Margin.Is4.FromBottom">
            <CardHeader>
                <CardTitle>Polar Area</CardTitle>
            </CardHeader>
            <CardBody>
                <Button Color="Color.Primary" Outline="true" Clicked="@(async () => await HandleRedraw( polarAreaChart, GetPolarAreaChartDataset ))">Redraw</Button>
            </CardBody>
            <CardBody>
                <Chart @ref="polarAreaChart" Type="ChartType.PolarArea" TItem="double" />
            </CardBody>
        </Card>
    </Column>
    <Column ColumnSize="ColumnSize.IsThird.OnWidescreen">
        <Card Margin="Margin.Is4.FromBottom">
            <CardHeader>
                <CardTitle>Radar</CardTitle>
            </CardHeader>
            <CardBody>
                <Button Color="Color.Primary" Outline="true" Clicked="@(async () => await HandleRedraw( radarChart, GetRadarChartDataset ))">Redraw</Button>
            </CardBody>
            <CardBody>
                <Chart @ref="radarChart" Type="ChartType.Radar" TItem="double" />
            </CardBody>
        </Card>
    </Column>
    <Column ColumnSize="ColumnSize.IsThird.OnWidescreen">
        <Card Margin="Margin.Is4.FromBottom">
            <CardHeader>
                <CardTitle>Doughnut</CardTitle>
            </CardHeader>
            <CardBody>
                <Button Color="Color.Primary" Outline="true" Clicked="@(async () => await HandleRedraw( doughnutChart, GetDoughnutChartDataset ))">Redraw</Button>
            </CardBody>
            <CardBody>
                <Chart @ref="doughnutChart" Type="ChartType.Doughnut" TItem="double" />
            </CardBody>
        </Card>
    </Column>
    <Column ColumnSize="ColumnSize.IsThird.OnWidescreen">
        <Card Margin="Margin.Is4.OnY">
            <CardHeader>
                <CardTitle>Line</CardTitle>
            </CardHeader>
            <CardBody>
                <Button Color="Color.Primary" Outline="true" Clicked="@(async () => await SetDataAndUpdate( lineChartWithData, RandomizeData ))">Change Data</Button>
            </CardBody>
            <CardBody>
                <LineChart @ref="lineChartWithData" TItem="double" />
            </CardBody>
        </Card>
    </Column>
</Row>