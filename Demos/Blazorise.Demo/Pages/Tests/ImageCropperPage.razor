@page "/tests/imagecropper"
@using System.Security.Cryptography.X509Certificates

<Row>
    <Column>
        <Card Margin="Margin.Is4.OnY">
            <CardHeader>
                <CardTitle>Image Cropper Component (based on <Anchor To="https://fengyuanchen.github.io/cropperjs/">Cropper.js</Anchor>)</CardTitle>
            </CardHeader>
            <CardBody>
                <Field>
                    <FieldLabel>
                        Aspect Ratio
                    </FieldLabel>
                    <FieldBody>
                        <RadioGroup @bind-CheckedValue="@ratio" Buttons>
                            <Radio Value="@ImageCropperAspectRatio.Is16x9.Value">16:9</Radio>
                            <Radio Value="@ImageCropperAspectRatio.Is4x3.Value">4:3</Radio>
                            <Radio Value="@ImageCropperAspectRatio.Is1x1.Value">1:1</Radio>
                            <Radio Value="@ImageCropperAspectRatio.Is2x3.Value">2:3</Radio>
                            <Radio Value="@ImageCropperAspectRatio.IsFree.Value">Free</Radio>
                        </RadioGroup>
                    </FieldBody>
                </Field>
                <Field>
                    <FieldLabel>
                        View Mode
                    </FieldLabel>
                    <FieldBody>
                        <RadioGroup @bind-CheckedValue="@viewMode" Buttons>
                            <Radio Value="@ImageCropperViewMode.Default">Default</Radio>
                            <Radio Value="@ImageCropperViewMode.ExceedToCanvas">Exceed To Canvas</Radio>
                            <Radio Value="@ImageCropperViewMode.FitContainer">Fit Container</Radio>
                            <Radio Value="@ImageCropperViewMode.FillFitContainer">Fill Fit Container</Radio>
                        </RadioGroup>
                    </FieldBody>
                </Field>
                <Field>
                    <FieldBody>
                        <Check @bind-Checked="@enabled">Enabled</Check>
                        <Check TValue="bool" Checked="@flipX" CheckedChanged="FlipX">Flip X</Check>
                        <Check TValue="bool" Checked="@flipY" CheckedChanged="FlipY">Flip Y</Check>
                    </FieldBody>
                </Field>
                <Field>
                    <FieldLabel>
                        Rotation
                    </FieldLabel>
                    <FieldBody>
                        <Slider TValue="int" Min="0" Max="360" ValueChanged="async x => await cropper.RotateTo( x )" />
                    </FieldBody>
                </Field>
                <Field>
                    <FieldLabel>
                        Zoom %
                    </FieldLabel>
                    <FieldBody>
                        <Slider TValue="int" Min="0" Max="100" ValueChanged="async x => await cropper.ZoomTo( 1 - x / 100d )" />
                    </FieldBody>
                </Field>
            </CardBody>
            <CardBody>
                <Row>
                    <Column>
                        <FieldLabel>
                            Image Cropper
                        </FieldLabel>
                        <FieldBody>
                            <ImageCropper @ref="cropper" Source="_content/Blazorise.Demo/img/amongus.png"
                                          AspectRatio="@new(ratio)"
                                          ViewMode="@viewMode"
                                          Enabled="@enabled"
                                          Cropped="OnCropped"
                                          PreviewSelector=".image-cropper-preview" />
                        </FieldBody>
                    </Column>
                    <Column>
                        <FieldLabel>
                            Preview
                        </FieldLabel>
                        <FieldBody>
                            <div class="image-cropper-preview" style="margin: 10px; width: 150px; height: 150px; overflow: hidden" />
                            <div class="image-cropper-preview" style="margin: 10px; width: 100px; height: 100px; overflow: hidden" />
                            <div class="image-cropper-preview" style="margin: 10px; width: 50px; height: 50px; overflow: hidden" />
                        </FieldBody>
                    </Column>
                </Row>
                <Row Margin="Margin.Is3">
                    <Column>
                        <Button Clicked="GetCroppedImage">Get Cropped Image</Button>
                    </Column>
                    <Column>
                        <img src="@result" width="250" height="250" />
                    </Column>
                </Row>
            </CardBody>
        </Card>
    </Column>
</Row>

@code {
    private ImageCropper cropper;
    private string result;
    private double? ratio = 1.0;
    private ImageCropperViewMode viewMode;
    private bool enabled = true;
    private bool flipX, flipY;

    private async Task GetCroppedImage()
    {
        result = await cropper.CropAsBase64ImageAsync( new() { Width = 250, Height = 250 } );
    }

    private void OnCropped()
    {
        // Console.WriteLine("Crop");
    }

    private async Task FlipX( bool flip )
    {
        flipX = flip;
        await cropper.Scale( flipX ? -1 : 1, flipY ? -1 : 1 );
    }

    private async Task FlipY( bool flip )
    {
        flipY = flip;
        await cropper.Scale( flipX ? -1 : 1, flipY ? -1 : 1 );
    }
}
