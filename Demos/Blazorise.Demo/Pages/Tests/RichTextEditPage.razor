@page "/tests/richtextedit"

<Row>
    <Column>
        <Card Margin="Margin.Is4.OnY">
            <CardHeader>
                <CardTitle>Rich Text Editor</CardTitle>
            </CardHeader>
            <CardBody>
                <CardText>Based on: <a href="https://quilljs.com/">QuillJs</a></CardText>
            </CardBody>
            <CardBody>
                <Fields>
                    <Field>
                        <FieldLabel>
                        </FieldLabel>
                        <FieldBody>
                            <Check @bind-Checked="@readOnly">Read only</Check>
                        </FieldBody>
                    </Field>
                </Fields>
            </CardBody>
            <CardBody>
                <RichTextEdit @ref="richTextEditRef"
                              ContentChanged="@OnContentChanged"
                              PlaceHolder="Type your post here..."
                              ReadOnly="@readOnly"
                              SubmitOnEnter="false"
                              EnterPressed="@OnSave"
                              ToolbarPosition="Placement.Bottom">
                    <Editor>
                        <p><b>Hello </b><i>world</i>!</p>
                        <p><br></p>
                        <p>
                            based on: <a href="https://quilljs.com/">Quill</a>
                        </p>
                    </Editor>
                    <Toolbar>
                        <RichTextEditToolbarGroup>
                            <RichTextEditToolbarButton Action="RichTextEditAction.Bold" />
                            <RichTextEditToolbarButton Action="RichTextEditAction.Italic" />
                            <RichTextEditToolbarButton Action="RichTextEditAction.Underline" />
                            <RichTextEditToolbarButton Action="RichTextEditAction.Strike" />
                        </RichTextEditToolbarGroup>
                        <RichTextEditToolbarGroup>
                            <RichTextEditToolbarSelect Action="RichTextEditAction.Size">
                                <RichTextEditToolbarSelectItem Value="small" />
                                <RichTextEditToolbarSelectItem IsSelected="true" />
                                <RichTextEditToolbarSelectItem Value="large" />
                                <RichTextEditToolbarSelectItem Value="huge">Very Big</RichTextEditToolbarSelectItem>
                            </RichTextEditToolbarSelect>
                        </RichTextEditToolbarGroup>
                        <RichTextEditToolbarGroup>
                            <RichTextEditToolbarButton Action="RichTextEditAction.List" Value="ordered" />
                            <RichTextEditToolbarButton Action="RichTextEditAction.List" Value="bullet" />
                        </RichTextEditToolbarGroup>
                        <RichTextEditToolbarGroup>
                            <RichTextEditToolbarButton Action="RichTextEditAction.Blockquote" />
                            <RichTextEditToolbarButton Action="RichTextEditAction.CodeBlock" />
                        </RichTextEditToolbarGroup>
                        <RichTextEditToolbarGroup>
                            <RichTextEditToolbarButton Action="RichTextEditAction.Script" Value="sub" />
                            <RichTextEditToolbarButton Action="RichTextEditAction.Script" Value="super" />
                        </RichTextEditToolbarGroup>
                        <RichTextEditToolbarGroup>
                            <RichTextEditToolbarSelect Action="RichTextEditAction.Color" />
                            <RichTextEditToolbarSelect Action="RichTextEditAction.Background" />
                        </RichTextEditToolbarGroup>
                        <RichTextEditToolbarGroup Float="Float.Right">
                            <Button onClick="window.open('https://www.quilljs.com/','quilljs')"><Icon Name="IconName.QuestionCircle" /></Button>
                            <Button Clicked="@OnSave"><Icon Name="IconName.Save" /></Button>
                        </RichTextEditToolbarGroup>
                    </Toolbar>
                </RichTextEdit>
            </CardBody>
        </Card>
    </Column>
</Row>
<Row>
    <Column>
        <Card Margin="Margin.Is4.OnY">
            <CardHeader>Html Content Preview</CardHeader>
            <CardBody>@((MarkupString) contentAsHtml)</CardBody>
        </Card>
    </Column>
    <Column>
        <Card Margin="Margin.Is4.OnY">
            <CardHeader>Delta Content Preview</CardHeader>
            <CardBody><code>@contentAsDeltaJson</code></CardBody>
        </Card>
    </Column>
    <Column>
        <Card Margin="Margin.Is4.OnY">
            <CardHeader>Text Content Preview</CardHeader>
            <CardBody><text>@contentAsText</text></CardBody>
        </Card>
    </Column>
</Row>
<Row>
    <Column>
        <Card Margin="Margin.Is4.FromBottom">
            <CardHeader>
                Bubble theme
            </CardHeader>
            <CardBody>
                <Alert Visible="true">
                    <AlertMessage>Note:</AlertMessage>
                    <AlertDescription>Start typing and change format by key bindings or by selecting the text</AlertDescription>
                </Alert>
                <RichTextEdit Style="border: 1px solid" Theme="RichTextEditTheme.Bubble" PlaceHolder="My message" />
            </CardBody>
        </Card>
    </Column>
    <Column>
        <Card Margin="Margin.Is4.FromBottom">
            <CardHeader>
                Snow theme
            </CardHeader>
            <CardBody>
                <RichTextEdit />
            </CardBody>
        </Card>
    </Column>
</Row>
<Modal @ref="modalRef">
    <ModalBackdrop />
    <ModalContent Size="ModalSize.Default" Centered="true">
        <ModalHeader>
            <ModalTitle>Saved content</ModalTitle>
            <CloseButton Clicked="@(() => modalRef.Hide())" />
        </ModalHeader>
        <ModalBody>
            @((MarkupString) savedContent)
        </ModalBody>
        <ModalFooter>
            <Button Color="Color.Primary" Clicked="(() => modalRef.Hide())">Ok</Button>
        </ModalFooter>
    </ModalContent>
</Modal>

@code {
    private Modal modalRef;
    private RichTextEdit richTextEditRef;
    private bool readOnly;
    private string contentAsHtml;
    private string contentAsDeltaJson;
    private string contentAsText;
    private string savedContent;

    public async Task OnContentChanged()
    {
        contentAsHtml = await richTextEditRef.GetHtmlAsync();
        contentAsDeltaJson = await richTextEditRef.GetDeltaAsync();
        contentAsText = await richTextEditRef.GetTextAsync();
    }

    public async Task OnSave()
    {
        savedContent = await richTextEditRef.GetHtmlAsync();
        modalRef.Show();
        await richTextEditRef.ClearAsync();
    }
}
