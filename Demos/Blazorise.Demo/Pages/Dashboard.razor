@page "/"
@inject IVersionProvider VersionProvider

<DataGrid TItem="Employee" Data="@employeeList" PageSize="5" Responsive Editable Filterable EditMode="DataGridEditMode.Popup">
    <DataGridCommandColumn />
     <DataGridSelectColumn TItem="Employee" Type="typeof(UsersRoles)" Field="@nameof( Employee.Role )" Caption="Gender" Editable
                           Data="RolesNamesSource" ValueField="(x) => ((UsersRoles)Enum.Parse(typeof(UsersRoles), (string)x))" TextField="(x) => (string)x" />

     <DataGridSelectColumn TItem="Employee" Type="typeof(int)" Field="@nameof( Employee.TestId )" Caption="Test Id" Editable
                           Data="tests" ValueField="(x) => ((Test)x).Id" TextField="(x) => ((Test)x).Name" />
 </DataGrid>

 @code {

    private List<Employee> employeeList = new List<Employee>() { new Employee( UsersRoles.Standard ) { TestId = 1 }, new Employee( UsersRoles.Premium ) { TestId = 1 }, new Employee( UsersRoles.Admin ) { TestId = 2 } };
    private List<string> RolesNamesSource = Enum.GetNames( typeof( UsersRoles ) ).ToList();
    private List<Test> tests = new List<Test>()
    {
        new Test() { Id=1, Name = "Test1" },
        new Test() { Id=2, Name = "Test2" },
        new Test() { Id=3, Name = "Test3" },
    };

    protected override void OnInitialized()
    {

        base.OnInitialized();

    }

    class Employee
    {
        public Employee( UsersRoles role )
        {
            Role = role;
        }

        public UsersRoles Role { get; set; }

        public int TestId { get; set; }
    }

    public class Test
    {
        public int Id { get; set; }
        public string Name { get; set; }
    }



    enum UsersRoles
    {
        Standard,
        Premium,
        Admin
    }

}