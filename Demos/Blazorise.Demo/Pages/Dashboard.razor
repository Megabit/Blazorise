@page "/"
@inject IVersionProvider VersionProvider
<DataGrid @ref="dataGridRef"
          TItem="Employee"
          Data="inMemoryData"
          Responsive
          ShowPager
          ShowPageSizes>
    <DataGridColumns>
        <DataGridColumn TextAlignment="TextAlignment.Center" TItem="Employee" Field="@nameof( Employee.Id )" Caption="#" Width="60px" />
        <DataGridColumn TItem="Employee" Field="@nameof( Employee.FirstName )" Caption="First Name">
        </DataGridColumn>
        <DataGridColumn TItem="Employee" Field="@nameof( Employee.LastName )" Caption="Last Name" />
        <DataGridColumn TItem="Employee" Field="@nameof( Employee.Email )" Caption="Email" />
        <DataGridColumn TItem="Employee" Field="@nameof( Employee.City )" Caption="City">
            <CaptionTemplate>
                <Icon Name="IconName.City" /> @context.Caption
            </CaptionTemplate>
        </DataGridColumn>
        <DataGridColumn TItem="Employee" Field="@nameof( Employee.Zip )" Caption="Zip">
        </DataGridColumn>
        <DataGridDateColumn TItem="Employee" Field="@nameof( Employee.DateOfBirth )" DisplayFormat="{0:dd.MM.yyyy}" Caption="Date Of Birth" Editable />
         <DataGridNumericColumn TItem="Employee" Field="@nameof( Employee.Childrens )" Caption="Childrens" ReverseSorting="true" Editable Filterable="false" />
         <DataGridSelectColumn TItem="Employee" Field="@nameof( Employee.Gender )" Caption="Gender" Editable Data="EmployeeData.Genders" ValueField="(x) => ((Gender)x).Code" TextField="(x) => ((Gender)x).Description" />
         <DataGridColumn TItem="Employee" Field="@nameof( Employee.Salary )" Caption="Salary" Editable Width="140px" DisplayFormat="{0:C}" DisplayFormatProvider="@System.Globalization.CultureInfo.GetCultureInfo("fr-FR")" TextAlignment="TextAlignment.End">
         </DataGridColumn>
         <DataGridCheckColumn TItem="Employee" Field="@nameof(Employee.IsActive)" Caption="Active" Editable Filterable="false">
             <DisplayTemplate>
                 <Check TValue="bool" Checked="context.IsActive" Disabled ReadOnly />
             </DisplayTemplate>
         </DataGridCheckColumn>
     </DataGridColumns>
 </DataGrid>

 <Button Clicked="LoadState">Load State</Button>
 <Button Clicked="SaveState">Save State</Button>

 @code {

    [Inject] EmployeeData EmployeeData { get; set; }

    private DataGrid<Employee> dataGridRef;
    private IEnumerable<Employee> inMemoryData;

    protected override async Task OnInitializedAsync()
    {
        inMemoryData = ( await EmployeeData.GetDataAsync().ConfigureAwait( false ) ).Take( 25 );
        await base.OnInitializedAsync();
    }

    private async Task LoadState()
    {
        var state = new DataGridState<Employee>()
        {
            CurrentPage = 2,
            PageSize = 10,
        };
        state.AddSortState( x=> x.Salary, SortDirection.Descending );
        state.AddFilterState( x => x.Email, "Pablo" );

        await dataGridRef.LoadState( state );
    }

    private Task SaveState()
    {
        var state = dataGridRef.GetState();
        //TODO : Local storage
        return Task.CompletedTask;
    }
}