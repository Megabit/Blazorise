@page "/"
@inject IVersionProvider VersionProvider


<Row>
    <Column>
        <Card Margin="Margin.Is4.OnY">
            <CardBody>
                <DataGrid TItem="Test"
                Data="inMemoryData"
                Responsive
                ShowPager
                ShowPageSizes
                Editable
                EditMode="editMode">
                    <DataGridColumns>
                        <DataGridCommandColumn TItem="Test"></DataGridCommandColumn>
                        <DataGridColumn TextAlignment="TextAlignment.Center" TItem="Test" Field="@nameof( Test.Id )" Caption="#" Width="60px" />
                        <DataGridColumn TItem="Test" Field="@nameof( Test.FirstName )" Caption="First Name" Editable />
                        <DataGridSelectColumn TItem="Test" Field="@nameof( Test.Values )" Caption="Genders" 
                        Multiple Editable Data="EmployeeData.Genders" ValueField="(x) => ((Gender)x).Code" TextField="(x) => ((Gender)x).Description" />
                    </DataGridColumns>
                </DataGrid>
            </CardBody>
        </Card>
    </Column>
</Row>

@code {

    [Inject] EmployeeData EmployeeData { get; set; }

    private List<Test> inMemoryData;
    private DataGridEditMode editMode = DataGridEditMode.Form;

    protected override async Task OnInitializedAsync()
    {
        inMemoryData = (await EmployeeData.GetDataAsync().ConfigureAwait(false)).Take(25).Select(x => new Test() { Id = x.Id, FirstName = x.FirstName, Values = new string[] { "M" } }).ToList();
        await base.OnInitializedAsync();
    }
    public class Test
    {
        public int Id { get; set; }
        public string FirstName { get; set; }
        public string[] Values { get; set; }
    }
}