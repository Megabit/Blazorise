<Card Margin="Margin.Is3.OnAll">
    <CardHeader>
        <Paragraph Margin="Margin.IsAuto" Color="TextColor.Black50">
            <CardTitle>Theme Settings</CardTitle>
        </Paragraph>
    </CardHeader>
    <CardBody>
        <Tabs TabPosition="TabPosition.Left" SelectedTab="@SelectedTab" SelectedTabChanged="@OnSelectedTabChanged">
            <Items>
                <Tab Name="General">General</Tab>
                <Tab Name="Alert">Alert</Tab>
                <Tab Name="Background">Background</Tab>
                <Tab Name="Badge">Badge</Tab>
                <Tab Name="Bar">Bar</Tab>
                <Tab Name="Breadcrumb">Breadcrumb</Tab>
                <Tab Name="Breakpoint">Breakpoint</Tab>
                <Tab Name="Button">Button</Tab>
                <Tab Name="Card">Card</Tab>
                <Tab Name="Color">Color</Tab>
                <Tab Name="Container">Container</Tab>
                <Tab Name="Divider">Divider</Tab>
                <Tab Name="Dropdown">Dropdown</Tab>
                <Tab Name="Input">Input</Tab>
                <Tab Name="Modal">Modal</Tab>
                <Tab Name="Pagination">Pagination</Tab>
                <Tab Name="Progress">Progress</Tab>
                <Tab Name="Sidebar">Sidebar</Tab>
                <Tab Name="Snackbar">Snackbar</Tab>
                <Tab Name="Table">Table</Tab>
                <Tab Name="Tabs">Tabs</Tab>
                <Tab Name="Text">Text</Tab>
                <Tab Name="Tooltip">Tooltip</Tab>
            </Items>
            <Content>
                <!-- #region General Options -->
                <TabPanel Name="General">
                    <Row>
                        <Column ColumnSize="ColumnSize.IsHalf">
                            <Card>
                                <CardHeader>
                                    <Paragraph Margin="Margin.IsAuto" Color="TextColor.Black50">
                                        <CardTitle>General Settings</CardTitle>
                                    </Paragraph>
                                </CardHeader>
                                <CardBody>
                                    <ColorTransparencyEdit Label="Black" Color="@Theme.Black"
                                                           ColorChanged="@( x => { Theme.Black = x; Theme.ThemeHasChanged(); })" />
                                    <Field Horizontal="true">
                                        <FieldLabel ColumnSize="ColumnSize.IsHalf">Enabled</FieldLabel>
                                        <Switch TValue="bool" Checked="@Theme.Enabled" CheckedChanged="@(x=>{ Theme.Enabled = x; Theme.ThemeHasChanged(); })" />
                                    </Field>
                                    <Field Horizontal="true">
                                        <FieldLabel ColumnSize="ColumnSize.IsHalf">Gradient background colors</FieldLabel>
                                        <Switch TValue="bool" Checked="@Theme.IsGradient" CheckedChanged="@(x=>{ Theme.IsGradient = x; Theme.ThemeHasChanged(); })" />
                                    </Field>
                                    <Field Horizontal="true">
                                        <FieldLabel ColumnSize="ColumnSize.IsHalf">Rounded elements</FieldLabel>
                                        <Switch TValue="bool" Checked="@Theme.IsRounded" CheckedChanged="@(x=>{ Theme.IsRounded = x; Theme.ThemeHasChanged(); })" />
                                    </Field>
                                    <Field Horizontal="true">
                                        <FieldLabel ColumnSize="ColumnSize.IsHalf">Luminance Threshold</FieldLabel>
                                        <FieldBody ColumnSize="ColumnSize.IsHalf">
                                            <Slider TValue="byte" Min="0" Max="255" Step="1"
                                                    Value="@Theme.LuminanceThreshold"
                                                    ValueChanged="@(x=>{ Theme.LuminanceThreshold = x; Theme.ThemeHasChanged(); })" />
                                        </FieldBody>
                                    </Field>
                                    <Field Horizontal="true">
                                        <FieldLabel ColumnSize="ColumnSize.IsHalf">Color Interval</FieldLabel>
                                        <FieldBody ColumnSize="ColumnSize.IsHalf">
                                            <Slider TValue="float" Min="0f" Max="32f" Step="1f"
                                                    Value="@Theme.ThemeColorInterval"
                                                    ValueChanged="@(x=>{ Theme.ThemeColorInterval = x; Theme.ThemeHasChanged(); })" />
                                        </FieldBody>
                                    </Field>
                                    <ColorTransparencyEdit Label="White" Color="@Theme.White"
                                                           ColorChanged="@( x => { Theme.White = x; Theme.ThemeHasChanged(); })" />
                                </CardBody>
                            </Card>
                        </Column>
                        <Column ColumnSize="ColumnSize.IsHalf">
                            <Card>
                                <CardHeader>
                                    <Paragraph Margin="Margin.IsAuto" Color="TextColor.Black50">
                                        <CardTitle>Preview</CardTitle>
                                    </Paragraph>
                                </CardHeader>
                                <CardBody>
                                    Work in Progress...@*TODO*@
                                </CardBody>
                            </Card>
                        </Column>
                    </Row>
                </TabPanel>
                <!-- #endregion General Options -->
                <!-- #region Alert Options -->
                <TabPanel Name="Alert">
                    <Row>
                        <Column ColumnSize="ColumnSize.IsHalf">
                            <Card>
                                <CardHeader>
                                    <Paragraph Margin="Margin.IsAuto" Color="TextColor.Black50">
                                        <CardTitle>Alert Settings</CardTitle>
                                    </Paragraph>
                                </CardHeader>
                                <CardBody>
                                    <Field Horizontal="true">
                                        <FieldLabel ColumnSize="ColumnSize.IsHalf">Background Level</FieldLabel>
                                        <FieldBody ColumnSize="ColumnSize.IsHalf">
                                            <Slider TValue="int" Min="-12" Max="12" Step="1"
                                                    Value="@Theme.AlertOptions.BackgroundLevel"
                                                    ValueChanged="@(x=>{ Theme.AlertOptions.BackgroundLevel = x; Theme.ThemeHasChanged(); })" />
                                        </FieldBody>
                                    </Field>
                                    <Field Horizontal="true">
                                        <FieldLabel ColumnSize="ColumnSize.IsHalf">Border Level</FieldLabel>
                                        <FieldBody ColumnSize="ColumnSize.IsHalf">
                                            <Slider TValue="int" Min="-12" Max="12" Step="1"
                                                    Value="@Theme.AlertOptions.BorderLevel"
                                                    ValueChanged="@(x=>{ Theme.AlertOptions.BorderLevel = x; Theme.ThemeHasChanged(); })" />
                                        </FieldBody>
                                    </Field>
                                    <Field Horizontal="true">
                                        <FieldLabel ColumnSize="ColumnSize.IsHalf">Border Radius</FieldLabel>
                                        <FieldBody ColumnSize="ColumnSize.IsHalf">
                                            <Slider TValue="decimal" Min="0m" Max="3m" Step="0.05m"
                                                    Value="@Convert.ToDecimal(Theme.AlertOptions.BorderRadius.Replace("rem", string.Empty), System.Globalization.CultureInfo.InvariantCulture)"
                                                    ValueChanged="@(x=>{ Theme.AlertOptions.BorderRadius = x.ToString() + "rem"; Theme.ThemeHasChanged(); })" />
                                        </FieldBody>
                                    </Field>
                                    <Field Horizontal="true">
                                        <FieldLabel ColumnSize="ColumnSize.IsHalf">Color Level</FieldLabel>
                                        <FieldBody ColumnSize="ColumnSize.IsHalf">
                                            <Slider TValue="int" Min="-12" Max="12" Step="1"
                                                    Value="@Theme.AlertOptions.ColorLevel"
                                                    ValueChanged="@(x=>{ Theme.AlertOptions.ColorLevel = x; Theme.ThemeHasChanged(); })" />
                                        </FieldBody>
                                    </Field>
                                    <Field Horizontal="true">
                                        <FieldLabel ColumnSize="ColumnSize.IsHalf">Gradient Blend Percentage</FieldLabel>
                                        <FieldBody ColumnSize="ColumnSize.IsHalf">
                                            <Slider TValue="float" Min="0f" Max="100f" Step="1f"
                                                    Value="@Theme.AlertOptions.GradientBlendPercentage"
                                                    ValueChanged="@(x=>{ Theme.AlertOptions.GradientBlendPercentage = x; Theme.ThemeHasChanged(); })" />
                                        </FieldBody>
                                    </Field>
                                </CardBody>
                            </Card>
                        </Column>
                        <Column ColumnSize="ColumnSize.IsHalf">
                            <Card>
                                <CardHeader>
                                    <Paragraph Margin="Margin.IsAuto" Color="TextColor.Black50">
                                        <CardTitle>Preview</CardTitle>
                                    </Paragraph>
                                </CardHeader>
                                <CardBody>
                                    <Alert Color="Color.Success" Visible="@AlertSuccessVisible" Dismisable="true">
                                        <AlertMessage><Icon Name="@IconName.Check" Margin="Margin.Is2.FromRight" />Success!</AlertMessage>
                                        <CloseButton Clicked="@(()=>AlertSuccessVisible = false)" /><br />
                                        <AlertDescription>This is a success alert</AlertDescription>
                                    </Alert>
                                    <Alert Color="Color.Info" Visible="@AlertInformationVisible" Dismisable="true">
                                        <AlertMessage><Icon Name="@IconName.Info" Margin="Margin.Is2.FromRight" />Information:</AlertMessage>
                                        <CloseButton Clicked="@(()=>AlertInformationVisible = false)" /><br />
                                        <AlertDescription>This is an information alert</AlertDescription>
                                    </Alert>
                                    <Alert Color="Color.Warning" Visible="@AlertWarningVisible" Dismisable="true">
                                        <AlertMessage><Icon Name="@IconName.ExclamationTriangle" Margin="Margin.Is2.FromRight" />Warning!</AlertMessage>
                                        <CloseButton Clicked="@(()=>AlertWarningVisible = false)" /><br />
                                        <AlertDescription>This is a warning alert</AlertDescription>
                                    </Alert>
                                    <Alert Color="Color.Danger" Visible="@AlertErrorVisible" Dismisable="true">
                                        <AlertMessage><Icon Name="@IconName.TimesCircle" Margin="Margin.Is2.FromRight" />Error!</AlertMessage>
                                        <CloseButton Clicked="@(()=>AlertErrorVisible = false)" /><br />
                                        <AlertDescription>This is an error alert</AlertDescription>
                                    </Alert>
                                    <Button Color="Color.Secondary" Clicked="@(()=>{ AlertSuccessVisible = AlertInformationVisible = AlertWarningVisible = AlertErrorVisible = true; })">
                                        <Icon Name="@IconName.Sync" Margin="Margin.Is3.FromRight" />Reset
                                    </Button>
                                </CardBody>
                            </Card>
                        </Column>
                    </Row>
                </TabPanel>
                <!-- #endregion Alert Options -->
                <!-- #region Background Options -->
                <TabPanel Name="Background">
                    <Row>
                        <Column ColumnSize="ColumnSize.IsHalf">
                            <Card>
                                <CardHeader>
                                    <Paragraph Margin="Margin.IsAuto" Color="TextColor.Black50">
                                        <CardTitle>Background Settings</CardTitle>
                                    </Paragraph>
                                </CardHeader>
                                <CardBody>
                                    <ColorTransparencyEdit Label="Body Color" Color="@Theme.BackgroundOptions.Body"
                                                           ColorChanged="@( x => { Theme.BackgroundOptions.Body = x; Theme.ThemeHasChanged(); })" />
                                    <ColorTransparencyEdit Label="Danger Color" Color="@Theme.BackgroundOptions.Danger"
                                                           ColorChanged="@( x => { Theme.BackgroundOptions.Danger = x; Theme.ThemeHasChanged(); })" />
                                    <ColorTransparencyEdit Label="Dark Color" Color="@Theme.BackgroundOptions.Dark"
                                                           ColorChanged="@( x => { Theme.BackgroundOptions.Dark = x; Theme.ThemeHasChanged(); })" />
                                    <ColorTransparencyEdit Label="Information Color" Color="@Theme.BackgroundOptions.Info"
                                                           ColorChanged="@( x => { Theme.BackgroundOptions.Info = x; Theme.ThemeHasChanged(); })" />
                                    <ColorTransparencyEdit Label="Light Color" Color="@Theme.BackgroundOptions.Light"
                                                           ColorChanged="@( x => { Theme.BackgroundOptions.Light = x; Theme.ThemeHasChanged(); })" />
                                    <ColorTransparencyEdit Label="Muted Color" Color="@Theme.BackgroundOptions.Muted"
                                                           ColorChanged="@( x => { Theme.BackgroundOptions.Muted = x; Theme.ThemeHasChanged(); })" />
                                    <ColorTransparencyEdit Label="Primary Color" Color="@Theme.BackgroundOptions.Primary"
                                                           ColorChanged="@( x => { Theme.BackgroundOptions.Primary = x; Theme.ThemeHasChanged(); })" />
                                    <ColorTransparencyEdit Label="Secondary Color" Color="@Theme.BackgroundOptions.Secondary"
                                                           ColorChanged="@( x => { Theme.BackgroundOptions.Secondary = x; Theme.ThemeHasChanged(); })" />
                                    <ColorTransparencyEdit Label="Success Color" Color="@Theme.BackgroundOptions.Success"
                                                           ColorChanged="@( x => { Theme.BackgroundOptions.Success = x; Theme.ThemeHasChanged(); })" />
                                    <ColorTransparencyEdit Label="Warning Color" Color="@Theme.BackgroundOptions.Warning"
                                                           ColorChanged="@( x => { Theme.BackgroundOptions.Warning = x; Theme.ThemeHasChanged(); })" />
                                </CardBody>
                            </Card>
                        </Column>
                        <Column ColumnSize="ColumnSize.IsHalf">
                            <Card>
                                <CardHeader>
                                    <Paragraph Margin="Margin.IsAuto" Color="TextColor.Black50">
                                        <CardTitle>Preview</CardTitle>
                                    </Paragraph>
                                </CardHeader>
                                <CardBody>
                                    Work in Progress...@*TODO*@
                                </CardBody>
                            </Card>
                        </Column>
                    </Row>
                </TabPanel>
                <!-- #endregion Background Options -->
                <!-- #region Badge Options -->
                <TabPanel Name="Badge">
                    <Row>
                        <Column ColumnSize="ColumnSize.IsHalf">
                            <Card>
                                <CardHeader>
                                    <Paragraph Margin="Margin.IsAuto" Color="TextColor.Black50">
                                        <CardTitle>Badge Settings</CardTitle>
                                    </Paragraph>
                                </CardHeader>
                                <CardBody>
                                    <Field Horizontal="true">
                                        <FieldLabel ColumnSize="ColumnSize.IsHalf">Border Radius</FieldLabel>
                                        <FieldBody ColumnSize="ColumnSize.IsHalf">
                                            <Slider TValue="decimal" Min="0m" Max="1m" Step="0.05m"
                                                    Value="@Convert.ToDecimal(Theme.BadgeOptions.BorderRadius.Replace("em", string.Empty), System.Globalization.CultureInfo.InvariantCulture)"
                                                    ValueChanged="@(x=>{ Theme.BadgeOptions.BorderRadius = x.ToString() + "em"; Theme.ThemeHasChanged(); })" />
                                        </FieldBody>
                                    </Field>
                                </CardBody>
                            </Card>
                        </Column>
                        <Column ColumnSize="ColumnSize.IsHalf">
                            <Card>
                                <CardHeader>
                                    <Paragraph Margin="Margin.IsAuto" Color="TextColor.Black50">
                                        <CardTitle>Preview</CardTitle>
                                    </Paragraph>
                                </CardHeader>
                                <CardBody>
                                    <Badge Color="Color.Primary">Primary</Badge>
                                    <Badge Color="Color.Secondary">Secondary</Badge>
                                    <Badge Color="Color.Success">Success</Badge>
                                    <Badge Color="Color.Info">Info</Badge>
                                    <Badge Color="Color.Warning">Warning</Badge>
                                    <Badge Color="Color.Danger">Danger</Badge>
                                    <Badge Color="Color.Light">Light</Badge>
                                    <Badge Color="Color.Dark">Dark</Badge>
                                </CardBody>
                            </Card>
                        </Column>
                    </Row>
                </TabPanel>
                <!-- #endregion Badge Options -->
                <!-- #region Bar Options -->
                <TabPanel Name="Bar">
                    <Row>
                        <Column ColumnSize="ColumnSize.IsHalf">
                            <Card>
                                <CardHeader>
                                    <Paragraph Margin="Margin.IsAuto" Color="TextColor.Black50">
                                        <CardTitle>Bar Settings</CardTitle>
                                    </Paragraph>
                                </CardHeader>
                                <CardBody>
                                    <ColorTransparencyEdit Label="Dark Background Color" Color="@Theme.BarOptions.DarkColors.BackgroundColor"
                                                           ColorChanged="@( x => { Theme.BarOptions.DarkColors.BackgroundColor = x; Theme.ThemeHasChanged(); })" />
                                    <ColorTransparencyEdit Label="Dark Brand Background Color" Color="@Theme.BarOptions.DarkColors.BrandColorOptions.BackgroundColor"
                                                           ColorChanged="@( x => { Theme.BarOptions.DarkColors.BrandColorOptions.BackgroundColor = x; Theme.ThemeHasChanged(); })" />
                                    <ColorTransparencyEdit Label="Dark Color" Color="@Theme.BarOptions.DarkColors.Color"
                                                           ColorChanged="@( x => { Theme.BarOptions.DarkColors.Color = x; Theme.ThemeHasChanged(); })" />
                                    <ColorTransparencyEdit Label="Dark Dropdown Background Color" Color="@Theme.BarOptions.DarkColors.DropdownColorOptions.BackgroundColor"
                                                           ColorChanged="@( x => { Theme.BarOptions.DarkColors.DropdownColorOptions.BackgroundColor = x; Theme.ThemeHasChanged(); })" />
                                    <ColorTransparencyEdit Label="Dark Item Active Background Color" Color="@Theme.BarOptions.DarkColors.ItemColorOptions.ActiveBackgroundColor"
                                                           ColorChanged="@( x => { Theme.BarOptions.DarkColors.ItemColorOptions.ActiveBackgroundColor = x; Theme.ThemeHasChanged(); })" />
                                    <ColorTransparencyEdit Label="Dark Item Active Color" Color="@Theme.BarOptions.DarkColors.ItemColorOptions.ActiveColor"
                                                           ColorChanged="@( x => { Theme.BarOptions.DarkColors.ItemColorOptions.ActiveColor = x; Theme.ThemeHasChanged(); })" />
                                    <ColorTransparencyEdit Label="Dark Item Hover Background Color" Color="@Theme.BarOptions.DarkColors.ItemColorOptions.HoverBackgroundColor"
                                                           ColorChanged="@( x => { Theme.BarOptions.DarkColors.ItemColorOptions.HoverBackgroundColor = x; Theme.ThemeHasChanged(); })" />
                                    <ColorTransparencyEdit Label="Dark Item Hover Color" Color="@Theme.BarOptions.DarkColors.ItemColorOptions.HoverColor"
                                                           ColorChanged="@( x => { Theme.BarOptions.DarkColors.ItemColorOptions.HoverColor = x; Theme.ThemeHasChanged(); })" />
                                    <ColorTransparencyEdit Label="Light Background Color" Color="@Theme.BarOptions.LightColors.BackgroundColor"
                                                           ColorChanged="@( x => { Theme.BarOptions.LightColors.BackgroundColor = x; Theme.ThemeHasChanged(); })" />
                                    <ColorTransparencyEdit Label="Light Brand Background Color" Color="@Theme.BarOptions.LightColors.BrandColorOptions.BackgroundColor"
                                                           ColorChanged="@( x => { Theme.BarOptions.LightColors.BrandColorOptions.BackgroundColor = x; Theme.ThemeHasChanged(); })" />
                                    <ColorTransparencyEdit Label="Light Color" Color="@Theme.BarOptions.LightColors.Color"
                                                           ColorChanged="@( x => { Theme.BarOptions.LightColors.Color = x; Theme.ThemeHasChanged(); })" />
                                    <ColorTransparencyEdit Label="Light Dropdown Background Color" Color="@Theme.BarOptions.LightColors.DropdownColorOptions.BackgroundColor"
                                                           ColorChanged="@( x => { Theme.BarOptions.LightColors.DropdownColorOptions.BackgroundColor = x; Theme.ThemeHasChanged(); })" />
                                    <ColorTransparencyEdit Label="Light Item Active Background Color" Color="@Theme.BarOptions.LightColors.ItemColorOptions.ActiveBackgroundColor"
                                                           ColorChanged="@( x => { Theme.BarOptions.LightColors.ItemColorOptions.ActiveBackgroundColor = x; Theme.ThemeHasChanged(); })" />
                                    <ColorTransparencyEdit Label="Light Item Active Color" Color="@Theme.BarOptions.LightColors.ItemColorOptions.ActiveColor"
                                                           ColorChanged="@( x => { Theme.BarOptions.LightColors.ItemColorOptions.ActiveColor = x; Theme.ThemeHasChanged(); })" />
                                    <ColorTransparencyEdit Label="Light Item Hover Background Color" Color="@Theme.BarOptions.LightColors.ItemColorOptions.HoverBackgroundColor"
                                                           ColorChanged="@( x => { Theme.BarOptions.LightColors.ItemColorOptions.HoverBackgroundColor = x; Theme.ThemeHasChanged(); })" />
                                    <ColorTransparencyEdit Label="Light Item Hover Color" Color="@Theme.BarOptions.LightColors.ItemColorOptions.HoverColor"
                                                           ColorChanged="@( x => { Theme.BarOptions.LightColors.ItemColorOptions.HoverColor = x; Theme.ThemeHasChanged(); })" />
                                    <Field Horizontal="true">
                                        <FieldLabel ColumnSize="ColumnSize.IsHalf">Vertical Brand Height</FieldLabel>
                                        <FieldBody ColumnSize="ColumnSize.IsHalf">
                                            <Slider TValue="int" Min="4" Max="256" Step="4"
                                                    Value="@Convert.ToInt32(Theme.BarOptions.VerticalBrandHeight.Replace("px", string.Empty), System.Globalization.CultureInfo.InvariantCulture)"
                                                    ValueChanged="@(x=>{ Theme.BarOptions.VerticalBrandHeight = x.ToString() + "px"; Theme.ThemeHasChanged(); })" />
                                        </FieldBody>
                                    </Field>
                                    <Field Horizontal="true">
                                        <FieldLabel ColumnSize="ColumnSize.IsHalf">Vertical Small Width</FieldLabel>
                                        <FieldBody ColumnSize="ColumnSize.IsHalf">
                                            <Slider TValue="int" Min="4" Max="256" Step="4"
                                                    Value="@Convert.ToInt32(Theme.BarOptions.VerticalSmallWidth.Replace("px", string.Empty), System.Globalization.CultureInfo.InvariantCulture)"
                                                    ValueChanged="@(x=>{ Theme.BarOptions.VerticalSmallWidth = x.ToString() + "px"; Theme.ThemeHasChanged(); })" />
                                        </FieldBody>
                                    </Field>
                                    <Field Horizontal="true">
                                        <FieldLabel ColumnSize="ColumnSize.IsHalf">Vertical Width</FieldLabel>
                                        <FieldBody ColumnSize="ColumnSize.IsHalf">
                                            <Slider TValue="int" Min="10" Max="1000" Step="10"
                                                    Value="@Convert.ToInt32(Theme.BarOptions.VerticalWidth.Replace("px", string.Empty), System.Globalization.CultureInfo.InvariantCulture)"
                                                    ValueChanged="@(x=>{ Theme.BarOptions.VerticalWidth = x.ToString() + "px"; Theme.ThemeHasChanged(); })" />
                                        </FieldBody>
                                    </Field>
                                </CardBody>
                            </Card>
                        </Column>
                        <Column ColumnSize="ColumnSize.IsHalf">
                            <Card>
                                <CardHeader>
                                    <Paragraph Margin="Margin.IsAuto" Color="TextColor.Black50">
                                        <CardTitle>Preview</CardTitle>
                                    </Paragraph>
                                </CardHeader>
                                <CardBody>
                                    Changes are applied instantly to the component, if available
                                </CardBody>
                            </Card>
                        </Column>
                    </Row>
                </TabPanel>
                <!-- #endregion Bar Options -->
                <!-- #region Breadcrumb Options -->
                <TabPanel Name="Breadcrumb">
                    <Row>
                        <Column ColumnSize="ColumnSize.IsHalf">
                            <Card>
                                <CardHeader>
                                    <Paragraph Margin="Margin.IsAuto" Color="TextColor.Black50">
                                        <CardTitle>Breadcrumb Settings</CardTitle>
                                    </Paragraph>
                                </CardHeader>
                                <CardBody>
                                    <Field Horizontal="true">
                                        <FieldLabel ColumnSize="ColumnSize.IsHalf">Border Radius</FieldLabel>
                                        <FieldBody ColumnSize="ColumnSize.IsHalf">
                                            <Slider TValue="decimal" Min="0m" Max="2m" Step="0.1m"
                                                    Value="@Convert.ToDecimal(Theme.BreadcrumbOptions.BorderRadius.Replace("rem", string.Empty), System.Globalization.CultureInfo.InvariantCulture)"
                                                    ValueChanged="@(x=>{ Theme.BreadcrumbOptions.BorderRadius = x.ToString() + "rem"; Theme.ThemeHasChanged(); })" />
                                        </FieldBody>
                                    </Field>
                                    <ColorTransparencyEdit Label="Color" Color="@Theme.BreadcrumbOptions.Color"
                                                           ColorChanged="@( x => { Theme.BreadcrumbOptions.Color = x; Theme.ThemeHasChanged(); })" />
                                </CardBody>
                            </Card>
                        </Column>
                        <Column ColumnSize="ColumnSize.IsHalf">
                            <Card>
                                <CardHeader>
                                    <Paragraph Margin="Margin.IsAuto" Color="TextColor.Black50">
                                        <CardTitle>Preview</CardTitle>
                                    </Paragraph>
                                </CardHeader>
                                <CardBody>
                                    <Breadcrumb>
                                        <BreadcrumbItem Active="true">
                                            <BreadcrumbLink To="#">Apps</BreadcrumbLink>
                                        </BreadcrumbItem>
                                    </Breadcrumb>
                                    <Breadcrumb>
                                        <BreadcrumbItem>
                                            <BreadcrumbLink To="#">Apps</BreadcrumbLink>
                                        </BreadcrumbItem>
                                        <BreadcrumbItem Active="true">
                                            <BreadcrumbLink To="#">Theme</BreadcrumbLink>
                                        </BreadcrumbItem>
                                    </Breadcrumb>
                                    <Breadcrumb>
                                        <BreadcrumbItem>
                                            <BreadcrumbLink To="#">Apps</BreadcrumbLink>
                                        </BreadcrumbItem>
                                        <BreadcrumbItem>
                                            <BreadcrumbLink To="#">Theme</BreadcrumbLink>
                                        </BreadcrumbItem>
                                        <BreadcrumbItem Active="true">
                                            <BreadcrumbLink To="#">Breadcrumb Settings</BreadcrumbLink>
                                        </BreadcrumbItem>
                                    </Breadcrumb>
                                </CardBody>
                            </Card>
                        </Column>
                    </Row>
                </TabPanel>
                <!-- #endregion Breadcrumb Options -->
                <!-- #region Breakpoint Options -->
                <TabPanel Name="Breakpoint">
                    <Row>
                        <Column ColumnSize="ColumnSize.IsHalf">
                            <Card>
                                <CardHeader>
                                    <Paragraph Margin="Margin.IsAuto" Color="TextColor.Black50">
                                        <CardTitle>Breakpoint Settings</CardTitle>
                                    </Paragraph>
                                </CardHeader>
                                <CardBody>
                                    <Field Horizontal="true">
                                        <FieldLabel ColumnSize="ColumnSize.IsHalf">Desktop</FieldLabel>
                                        <FieldBody ColumnSize="ColumnSize.IsHalf">
                                            <Slider TValue="int" Min="8" Max="2400" Step="8"
                                                    Value="@Convert.ToInt32(Theme.BreakpointOptions.Desktop.Replace("px", string.Empty), System.Globalization.CultureInfo.InvariantCulture)"
                                                    ValueChanged="@(x=>{ Theme.BreakpointOptions.Desktop = x.ToString() + "px"; Theme.ThemeHasChanged(); })" />
                                        </FieldBody>
                                    </Field>
                                    <Field Horizontal="true">
                                        <FieldLabel ColumnSize="ColumnSize.IsHalf">FullHD</FieldLabel>
                                        <FieldBody ColumnSize="ColumnSize.IsHalf">
                                            <Slider TValue="int" Min="8" Max="2400" Step="8"
                                                    Value="@Convert.ToInt32(Theme.BreakpointOptions.FullHD.Replace("px", string.Empty), System.Globalization.CultureInfo.InvariantCulture)"
                                                    ValueChanged="@(x=>{ Theme.BreakpointOptions.FullHD = x.ToString() + "px"; Theme.ThemeHasChanged(); })" />
                                        </FieldBody>
                                    </Field>
                                    <Field Horizontal="true">
                                        <FieldLabel ColumnSize="ColumnSize.IsHalf">Mobile</FieldLabel>
                                        <FieldBody ColumnSize="ColumnSize.IsHalf">
                                            <Slider TValue="int" Min="8" Max="2400" Step="8"
                                                    Value="@Convert.ToInt32(Theme.BreakpointOptions.Mobile.Replace("px", string.Empty), System.Globalization.CultureInfo.InvariantCulture)"
                                                    ValueChanged="@(x=>{ Theme.BreakpointOptions.Mobile = x.ToString() + "px"; Theme.ThemeHasChanged(); })" />
                                        </FieldBody>
                                    </Field>
                                    <Field Horizontal="true">
                                        <FieldLabel ColumnSize="ColumnSize.IsHalf">Tablet</FieldLabel>
                                        <FieldBody ColumnSize="ColumnSize.IsHalf">
                                            <Slider TValue="int" Min="8" Max="2400" Step="8"
                                                    Value="@Convert.ToInt32(Theme.BreakpointOptions.Tablet.Replace("px", string.Empty), System.Globalization.CultureInfo.InvariantCulture)"
                                                    ValueChanged="@(x=>{ Theme.BreakpointOptions.Tablet = x.ToString() + "px"; Theme.ThemeHasChanged(); })" />
                                        </FieldBody>
                                    </Field>
                                    <Field Horizontal="true">
                                        <FieldLabel ColumnSize="ColumnSize.IsHalf">Widescreen</FieldLabel>
                                        <FieldBody ColumnSize="ColumnSize.IsHalf">
                                            <Slider TValue="int" Min="8" Max="2400" Step="8"
                                                    Value="@Convert.ToInt32(Theme.BreakpointOptions.Widescreen.Replace("px", string.Empty), System.Globalization.CultureInfo.InvariantCulture)"
                                                    ValueChanged="@(x=>{ Theme.BreakpointOptions.Widescreen = x.ToString() + "px"; Theme.ThemeHasChanged(); })" />
                                        </FieldBody>
                                    </Field>
                                </CardBody>
                            </Card>
                        </Column>
                        <Column ColumnSize="ColumnSize.IsHalf">
                            <Card>
                                <CardHeader>
                                    <Paragraph Margin="Margin.IsAuto" Color="TextColor.Black50">
                                        <CardTitle>Preview</CardTitle>
                                    </Paragraph>
                                </CardHeader>
                                <CardBody>
                                    Work in Progress...@*TODO*@
                                </CardBody>
                            </Card>
                        </Column>
                    </Row>
                </TabPanel>
                <!-- #endregion Breakpoint Options -->
                <!-- #region Button Options -->
                <TabPanel Name="Button">
                    <Row>
                        <Column ColumnSize="ColumnSize.IsHalf">
                            <Card>
                                <CardHeader>
                                    <Paragraph Margin="Margin.IsAuto" Color="TextColor.Black50">
                                        <CardTitle>Button Settings</CardTitle>
                                    </Paragraph>
                                </CardHeader>
                                <CardBody>
                                    <Field Horizontal="true">
                                        <FieldLabel ColumnSize="ColumnSize.IsHalf">Active Darken Color</FieldLabel>
                                        <FieldBody ColumnSize="ColumnSize.IsHalf">
                                            <Slider TValue="float" Min="0f" Max="100f" Step="2.5f"
                                                    Value="@Theme.ButtonOptions.ActiveDarkenColor"
                                                    ValueChanged="@(x=>{ Theme.ButtonOptions.ActiveDarkenColor = x; Theme.ThemeHasChanged(); })" />
                                        </FieldBody>
                                    </Field>
                                    <Field Horizontal="true">
                                        <FieldLabel ColumnSize="ColumnSize.IsHalf">Active Lighten Color</FieldLabel>
                                        <FieldBody ColumnSize="ColumnSize.IsHalf">
                                            <Slider TValue="float" Min="0f" Max="100f" Step="2.5f"
                                                    Value="@Theme.ButtonOptions.ActiveLightenColor"
                                                    ValueChanged="@(x=>{ Theme.ButtonOptions.ActiveLightenColor = x; Theme.ThemeHasChanged(); })" />
                                        </FieldBody>
                                    </Field>
                                    <Field Horizontal="true">
                                        <FieldLabel ColumnSize="ColumnSize.IsHalf">Border Radius</FieldLabel>
                                        <FieldBody ColumnSize="ColumnSize.IsHalf">
                                            <Slider TValue="decimal" Min="0m" Max="3m" Step="0.05m"
                                                    Value="@Convert.ToDecimal(Theme.ButtonOptions.BorderRadius.Replace("rem", string.Empty), System.Globalization.CultureInfo.InvariantCulture)"
                                                    ValueChanged="@(x=>{ Theme.ButtonOptions.BorderRadius = x.ToString() + "rem"; Theme.ThemeHasChanged(); })" />
                                        </FieldBody>
                                    </Field>
                                    <Field Horizontal="true">
                                        <FieldLabel ColumnSize="ColumnSize.IsHalf">Box Shadow Size</FieldLabel>
                                        <FieldBody ColumnSize="ColumnSize.IsHalf">
                                            <Slider TValue="decimal" Min="0m" Max="3m" Step="0.05m"
                                                    Value="@Convert.ToDecimal(Theme.ButtonOptions.BoxShadowSize?.Replace("rem", string.Empty), System.Globalization.CultureInfo.InvariantCulture)"
                                                    ValueChanged="@(x=>{ Theme.ButtonOptions.BoxShadowSize = x.ToString() + "rem"; Theme.ThemeHasChanged(); })" />
                                        </FieldBody>
                                    </Field>
                                    <Field Horizontal="true">
                                        <FieldLabel ColumnSize="ColumnSize.IsHalf">Box Shadow Transparency</FieldLabel>
                                        <FieldBody ColumnSize="ColumnSize.IsHalf">
                                            <Slider TValue="byte" Min="0" Max="255" Step="1"
                                                    Value="@Theme.ButtonOptions.BoxShadowTransparency"
                                                    ValueChanged="@(x=>{ Theme.ButtonOptions.BoxShadowTransparency = x; Theme.ThemeHasChanged(); })" />
                                        </FieldBody>
                                    </Field>
                                    <Field Horizontal="true">
                                        <FieldLabel ColumnSize="ColumnSize.IsHalf">Gradient Blend Percentage</FieldLabel>
                                        <FieldBody ColumnSize="ColumnSize.IsHalf">
                                            <Slider TValue="float" Min="0f" Max="100f" Step="1f"
                                                    Value="@Theme.ButtonOptions.GradientBlendPercentage"
                                                    ValueChanged="@(x=>{ Theme.ButtonOptions.GradientBlendPercentage = x; Theme.ThemeHasChanged(); })" />
                                        </FieldBody>
                                    </Field>
                                    <Field Horizontal="true">
                                        <FieldLabel ColumnSize="ColumnSize.IsHalf">Hover Darken Color</FieldLabel>
                                        <FieldBody ColumnSize="ColumnSize.IsHalf">
                                            <Slider TValue="float" Min="0f" Max="100f" Step="2.5f"
                                                    Value="@Theme.ButtonOptions.HoverDarkenColor"
                                                    ValueChanged="@(x=>{ Theme.ButtonOptions.HoverDarkenColor = x; Theme.ThemeHasChanged(); })" />
                                        </FieldBody>
                                    </Field>
                                    <Field Horizontal="true">
                                        <FieldLabel ColumnSize="ColumnSize.IsHalf">Hover Lighten Color</FieldLabel>
                                        <FieldBody ColumnSize="ColumnSize.IsHalf">
                                            <Slider TValue="float" Min="0f" Max="100f" Step="2.5f"
                                                    Value="@Theme.ButtonOptions.HoverLightenColor"
                                                    ValueChanged="@(x=>{ Theme.ButtonOptions.HoverLightenColor = x; Theme.ThemeHasChanged(); })" />
                                        </FieldBody>
                                    </Field>
                                    <Field Horizontal="true">
                                        <FieldLabel ColumnSize="ColumnSize.IsHalf">Large Border Radius</FieldLabel>
                                        <FieldBody ColumnSize="ColumnSize.IsHalf">
                                            <Slider TValue="decimal" Min="0m" Max="3m" Step="0.05m"
                                                    Value="@Convert.ToDecimal(Theme.ButtonOptions.LargeBorderRadius.Replace("rem", string.Empty), System.Globalization.CultureInfo.InvariantCulture)"
                                                    ValueChanged="@(x=>{ Theme.ButtonOptions.LargeBorderRadius = x.ToString() + "rem"; Theme.ThemeHasChanged(); })" />
                                        </FieldBody>
                                    </Field>
                                    <Field Horizontal="true">
                                        <FieldLabel ColumnSize="ColumnSize.IsHalf">Top Margin</FieldLabel>
                                        <FieldBody ColumnSize="ColumnSize.IsHalf">
                                            <Slider TValue="decimal" Min="0.0625m" Max="5m" Step="0.0625m"
                                                    Value="@Convert.ToDecimal(Theme.ButtonOptions.Margin.Split(" ")[0].Replace("rem", string.Empty), System.Globalization.CultureInfo.InvariantCulture)"
                                                    ValueChanged="@(x=>{ Theme.ButtonOptions.Margin = string.Join(" ",
                                            x.ToString() + "rem",
                                            Theme.ButtonOptions.Margin.Split(" ")[1],
                                            Theme.ButtonOptions.Margin.Split(" ")[2],
                                            Theme.ButtonOptions.Margin.Split(" ")[3]);
                                            Theme.ThemeHasChanged(); })" />
                                        </FieldBody>
                                    </Field>
                                    <Field Horizontal="true">
                                        <FieldLabel ColumnSize="ColumnSize.IsHalf">Right Margin</FieldLabel>
                                        <FieldBody ColumnSize="ColumnSize.IsHalf">
                                            <Slider TValue="decimal" Min="0.0625m" Max="5m" Step="0.0625m"
                                                    Value="@Convert.ToDecimal(Theme.ButtonOptions.Margin.Split(" ")[1].Replace("rem", string.Empty), System.Globalization.CultureInfo.InvariantCulture)"
                                                    ValueChanged="@(x=>{ Theme.ButtonOptions.Margin = string.Join(" ",
                                            Theme.ButtonOptions.Margin.Split(" ")[0],
                                            x.ToString() + "rem",
                                            Theme.ButtonOptions.Margin.Split(" ")[2],
                                            Theme.ButtonOptions.Margin.Split(" ")[3]);
                                            Theme.ThemeHasChanged(); })" />
                                        </FieldBody>
                                    </Field>
                                    <Field Horizontal="true">
                                        <FieldLabel ColumnSize="ColumnSize.IsHalf">Bottom Margin</FieldLabel>
                                        <FieldBody ColumnSize="ColumnSize.IsHalf">
                                            <Slider TValue="decimal" Min="0.0625m" Max="5m" Step="0.0625m"
                                                    Value="@Convert.ToDecimal(Theme.ButtonOptions.Margin.Split(" ")[2].Replace("rem", string.Empty), System.Globalization.CultureInfo.InvariantCulture)"
                                                    ValueChanged="@(x=>{ Theme.ButtonOptions.Margin = string.Join(" ",
                                            Theme.ButtonOptions.Margin.Split(" ")[0],
                                            Theme.ButtonOptions.Margin.Split(" ")[1],
                                            x.ToString() + "rem",
                                            Theme.ButtonOptions.Margin.Split(" ")[3]);
                                            Theme.ThemeHasChanged(); })" />
                                        </FieldBody>
                                    </Field>
                                    <Field Horizontal="true">
                                        <FieldLabel ColumnSize="ColumnSize.IsHalf">Left Margin</FieldLabel>
                                        <FieldBody ColumnSize="ColumnSize.IsHalf">
                                            <Slider TValue="decimal" Min="0.0625m" Max="5m" Step="0.0625m"
                                                    Value="@Convert.ToDecimal(Theme.ButtonOptions.Margin.Split(" ")[3].Replace("rem", string.Empty), System.Globalization.CultureInfo.InvariantCulture)"
                                                    ValueChanged="@(x=>{ Theme.ButtonOptions.Margin = string.Join(" ",
                                            Theme.ButtonOptions.Margin.Split(" ")[0],
                                            Theme.ButtonOptions.Margin.Split(" ")[1],
                                            Theme.ButtonOptions.Margin.Split(" ")[2],
                                            x.ToString() + "rem");
                                            Theme.ThemeHasChanged(); })" />
                                        </FieldBody>
                                    </Field>
                                    <Field Horizontal="true">
                                        <FieldLabel ColumnSize="ColumnSize.IsHalf">Top Padding</FieldLabel>
                                        <FieldBody ColumnSize="ColumnSize.IsHalf">
                                            <Slider TValue="decimal" Min="0.0625m" Max="5m" Step="0.0625m"
                                                    Value="@Convert.ToDecimal(Theme.ButtonOptions.Padding.Split(" ")[0].Replace("rem", string.Empty), System.Globalization.CultureInfo.InvariantCulture)"
                                                    ValueChanged="@(x=>{ Theme.ButtonOptions.Padding = string.Join(" ",
                                            x.ToString() + "rem",
                                            Theme.ButtonOptions.Padding.Split(" ")[1],
                                            Theme.ButtonOptions.Padding.Split(" ")[2],
                                            Theme.ButtonOptions.Padding.Split(" ")[3]);
                                            Theme.ThemeHasChanged(); })" />
                                        </FieldBody>
                                    </Field>
                                    <Field Horizontal="true">
                                        <FieldLabel ColumnSize="ColumnSize.IsHalf">Right Padding</FieldLabel>
                                        <FieldBody ColumnSize="ColumnSize.IsHalf">
                                            <Slider TValue="decimal" Min="0.0625m" Max="5m" Step="0.0625m"
                                                    Value="@Convert.ToDecimal(Theme.ButtonOptions.Padding.Split(" ")[1].Replace("rem", string.Empty), System.Globalization.CultureInfo.InvariantCulture)"
                                                    ValueChanged="@(x=>{ Theme.ButtonOptions.Padding = string.Join(" ",
                                            Theme.ButtonOptions.Padding.Split(" ")[0],
                                            x.ToString() + "rem",
                                            Theme.ButtonOptions.Padding.Split(" ")[2],
                                            Theme.ButtonOptions.Padding.Split(" ")[3]);
                                            Theme.ThemeHasChanged(); })" />
                                        </FieldBody>
                                    </Field>
                                    <Field Horizontal="true">
                                        <FieldLabel ColumnSize="ColumnSize.IsHalf">Bottom Padding</FieldLabel>
                                        <FieldBody ColumnSize="ColumnSize.IsHalf">
                                            <Slider TValue="decimal" Min="0.0625m" Max="5m" Step="0.0625m"
                                                    Value="@Convert.ToDecimal(Theme.ButtonOptions.Padding.Split(" ")[2].Replace("rem", string.Empty), System.Globalization.CultureInfo.InvariantCulture)"
                                                    ValueChanged="@(x=>{ Theme.ButtonOptions.Padding = string.Join(" ",
                                            Theme.ButtonOptions.Padding.Split(" ")[0],
                                            Theme.ButtonOptions.Padding.Split(" ")[1],
                                            x.ToString() + "rem",
                                            Theme.ButtonOptions.Padding.Split(" ")[3]);
                                            Theme.ThemeHasChanged(); })" />
                                        </FieldBody>
                                    </Field>
                                    <Field Horizontal="true">
                                        <FieldLabel ColumnSize="ColumnSize.IsHalf">Left Padding</FieldLabel>
                                        <FieldBody ColumnSize="ColumnSize.IsHalf">
                                            <Slider TValue="decimal" Min="0.0625m" Max="5m" Step="0.0625m"
                                                    Value="@Convert.ToDecimal(Theme.ButtonOptions.Padding.Split(" ")[3].Replace("rem", string.Empty), System.Globalization.CultureInfo.InvariantCulture)"
                                                    ValueChanged="@(x=>{ Theme.ButtonOptions.Padding = string.Join(" ",
                                            Theme.ButtonOptions.Padding.Split(" ")[0],
                                            Theme.ButtonOptions.Padding.Split(" ")[1],
                                            Theme.ButtonOptions.Padding.Split(" ")[2],
                                            x.ToString() + "rem");
                                            Theme.ThemeHasChanged(); })" />
                                        </FieldBody>
                                    </Field>
                                    <Field Horizontal="true">
                                        <FieldLabel ColumnSize="ColumnSize.IsHalf">Small Border Radius</FieldLabel>
                                        <FieldBody ColumnSize="ColumnSize.IsHalf">
                                            <Slider TValue="decimal" Min="0m" Max="3m" Step="0.05m"
                                                    Value="@Convert.ToDecimal(Theme.ButtonOptions.SmallBorderRadius.Replace("rem", string.Empty), System.Globalization.CultureInfo.InvariantCulture)"
                                                    ValueChanged="@(x=>{ Theme.ButtonOptions.SmallBorderRadius = x.ToString() + "rem"; Theme.ThemeHasChanged(); })" />
                                        </FieldBody>
                                    </Field>
                                </CardBody>
                            </Card>
                        </Column>
                        <Column ColumnSize="ColumnSize.IsHalf">
                            <Card>
                                <CardHeader>
                                    <Paragraph Margin="Margin.IsAuto" Color="TextColor.Black50">
                                        <CardTitle>Preview</CardTitle>
                                    </Paragraph>
                                </CardHeader>
                                <CardBody>
                                    Work in Progress...@*TODO*@
                                </CardBody>
                            </Card>
                        </Column>
                    </Row>
                </TabPanel>
                <!-- #endregion Button Options -->
                <!-- #region Card Options -->
                <TabPanel Name="Card">
                    <Row>
                        <Column ColumnSize="ColumnSize.IsHalf">
                            <Card>
                                <CardHeader>
                                    <Paragraph Margin="Margin.IsAuto" Color="TextColor.Black50">
                                        <CardTitle>Card Settings</CardTitle>
                                    </Paragraph>
                                </CardHeader>
                                <CardBody>
                                    <Field Horizontal="true">
                                        <FieldLabel ColumnSize="ColumnSize.IsHalf">Border Radius</FieldLabel>
                                        <FieldBody ColumnSize="ColumnSize.IsHalf">
                                            <Slider TValue="decimal" Min="0m" Max="3m" Step="0.05m"
                                                    Value="@Convert.ToDecimal(Theme.CardOptions.BorderRadius.Replace("rem", string.Empty), System.Globalization.CultureInfo.InvariantCulture)"
                                                    ValueChanged="@(x=>{ Theme.CardOptions.BorderRadius = x.ToString() + "rem"; Theme.ThemeHasChanged(); })" />
                                        </FieldBody>
                                    </Field>
                                    <Field Horizontal="true">
                                        <FieldLabel ColumnSize="ColumnSize.IsHalf">Image Top Radius</FieldLabel>
                                        <FieldBody ColumnSize="ColumnSize.IsHalf">
                                            <Slider TValue="decimal" Min="0m" Max="3m" Step="0.05m"
                                                    Value="@Convert.ToDecimal(Theme.CardOptions.ImageTopRadius.Replace("calc(", string.Empty).Replace("rem - 1px)", string.Empty), System.Globalization.CultureInfo.InvariantCulture)"
                                                    ValueChanged="@(x=>{ Theme.CardOptions.ImageTopRadius = "calc(" + x.ToString() + "rem - 1px)"; Theme.ThemeHasChanged(); })" />
                                        </FieldBody>
                                    </Field>
                                </CardBody>
                            </Card>
                        </Column>
                        <Column ColumnSize="ColumnSize.IsHalf">
                            <Card>
                                <CardHeader>
                                    <Paragraph Margin="Margin.IsAuto" Color="TextColor.Black50">
                                        <CardTitle>Preview</CardTitle>
                                    </Paragraph>
                                </CardHeader>
                                <CardBody>
                                    <Card>
                                        <CardHeader>
                                            <CardTitle>Card Title</CardTitle>
                                        </CardHeader>
                                        <CardBody>
                                            <CardSubtitle>Card Subtitle</CardSubtitle>
                                        </CardBody>
                                        <CardImage Source="docs/assets/images/blazorise.png" Alt="Logo Image" />
                                        <CardBody>
                                            <CardText>Card text</CardText>
                                            <CardLink Source="#">Card link</CardLink>
                                        </CardBody>
                                        <CardFooter>
                                            <CardText>Card Footer</CardText>
                                        </CardFooter>
                                    </Card>
                                </CardBody>
                            </Card>
                        </Column>
                    </Row>
                </TabPanel>
                <!-- #endregion Card Options -->
                <!-- #region Color Options -->
                <TabPanel Name="Color">
                    <Row>
                        <Column ColumnSize="ColumnSize.IsHalf">
                            <Card>
                                <CardHeader>
                                    <Paragraph Margin="Margin.IsAuto" Color="TextColor.Black50">
                                        <CardTitle>Color Settings</CardTitle>
                                    </Paragraph>
                                </CardHeader>
                                <CardBody>
                                    <ColorTransparencyEdit Label="Danger" Color="@Theme.ColorOptions.Danger"
                                                           ColorChanged="@( x => { Theme.ColorOptions.Danger = x; Theme.ThemeHasChanged(); })" />
                                    <ColorTransparencyEdit Label="Dark" Color="@Theme.ColorOptions.Dark"
                                                           ColorChanged="@( x => { Theme.ColorOptions.Dark = x; Theme.ThemeHasChanged(); })" />
                                    <ColorTransparencyEdit Label="Information" Color="@Theme.ColorOptions.Info"
                                                           ColorChanged="@( x => { Theme.ColorOptions.Info = x; Theme.ThemeHasChanged(); })" />
                                    <ColorTransparencyEdit Label="Light" Color="@Theme.ColorOptions.Light"
                                                           ColorChanged="@( x => { Theme.ColorOptions.Light = x; Theme.ThemeHasChanged(); })" />
                                    <ColorTransparencyEdit Label="Primary" Color="@Theme.ColorOptions.Primary"
                                                           ColorChanged="@( x => { Theme.ColorOptions.Primary = x; Theme.ThemeHasChanged(); })" />
                                    <ColorTransparencyEdit Label="Secondary" Color="@Theme.ColorOptions.Secondary"
                                                           ColorChanged="@( x => { Theme.ColorOptions.Secondary = x; Theme.ThemeHasChanged(); })" />
                                    <ColorTransparencyEdit Label="Success" Color="@Theme.ColorOptions.Success"
                                                           ColorChanged="@( x => { Theme.ColorOptions.Success = x; Theme.ThemeHasChanged(); })" />
                                    <ColorTransparencyEdit Label="Warning" Color="@Theme.ColorOptions.Warning"
                                                           ColorChanged="@( x => { Theme.ColorOptions.Warning = x; Theme.ThemeHasChanged(); })" />
                                </CardBody>
                            </Card>
                        </Column>
                        <Column ColumnSize="ColumnSize.IsHalf">
                            <Card>
                                <CardHeader>
                                    <Paragraph Margin="Margin.IsAuto" Color="TextColor.Black50">
                                        <CardTitle>Preview</CardTitle>
                                    </Paragraph>
                                </CardHeader>
                                <CardBody>
                                    Work in Progress...@*TODO*@
                                </CardBody>
                            </Card>
                        </Column>
                    </Row>
                </TabPanel>
                <!-- #endregion Color Options -->
                <!-- #region Container Options -->
                <TabPanel Name="Container">
                    <Row>
                        <Column ColumnSize="ColumnSize.IsHalf">
                            <Card>
                                <CardHeader>
                                    <Paragraph Margin="Margin.IsAuto" Color="TextColor.Black50">
                                        <CardTitle>Container Settings</CardTitle>
                                    </Paragraph>
                                </CardHeader>
                                <CardBody>
                                    <Field Horizontal="true">
                                        <FieldLabel ColumnSize="ColumnSize.IsHalf">Max Width Desktop</FieldLabel>
                                        <FieldBody ColumnSize="ColumnSize.IsHalf">
                                            <Slider TValue="int" Min="10" Max="2000" Step="10"
                                                    Value="@Convert.ToInt32(Theme.ContainerMaxWidthOptions.Desktop.Replace("px", string.Empty), System.Globalization.CultureInfo.InvariantCulture)"
                                                    ValueChanged="@(x=>{ Theme.ContainerMaxWidthOptions.Desktop = x.ToString() + "px"; Theme.ThemeHasChanged(); })" />
                                        </FieldBody>
                                    </Field>
                                    <Field Horizontal="true">
                                        <FieldLabel ColumnSize="ColumnSize.IsHalf">Max Width FullHD</FieldLabel>
                                        <FieldBody ColumnSize="ColumnSize.IsHalf">
                                            <Slider TValue="int" Min="10" Max="2000" Step="10"
                                                    Value="@Convert.ToInt32(Theme.ContainerMaxWidthOptions.FullHD.Replace("px", string.Empty), System.Globalization.CultureInfo.InvariantCulture)"
                                                    ValueChanged="@(x=>{ Theme.ContainerMaxWidthOptions.FullHD = x.ToString() + "px"; Theme.ThemeHasChanged(); })" />
                                        </FieldBody>
                                    </Field>
                                    <Field Horizontal="true">
                                        <FieldLabel ColumnSize="ColumnSize.IsHalf">Max Width Mobile</FieldLabel>
                                        <FieldBody ColumnSize="ColumnSize.IsHalf">
                                            <Slider TValue="int" Min="10" Max="2000" Step="10"
                                                    Value="@Convert.ToInt32(Theme.ContainerMaxWidthOptions.Mobile.Replace("px", string.Empty), System.Globalization.CultureInfo.InvariantCulture)"
                                                    ValueChanged="@(x=>{ Theme.ContainerMaxWidthOptions.Mobile = x.ToString() + "px"; Theme.ThemeHasChanged(); })" />
                                        </FieldBody>
                                    </Field>
                                    <Field Horizontal="true">
                                        <FieldLabel ColumnSize="ColumnSize.IsHalf">Max Width Tablet</FieldLabel>
                                        <FieldBody ColumnSize="ColumnSize.IsHalf">
                                            <Slider TValue="int" Min="10" Max="2000" Step="10"
                                                    Value="@Convert.ToInt32(Theme.ContainerMaxWidthOptions.Tablet.Replace("px", string.Empty), System.Globalization.CultureInfo.InvariantCulture)"
                                                    ValueChanged="@(x=>{ Theme.ContainerMaxWidthOptions.Tablet = x.ToString() + "px"; Theme.ThemeHasChanged(); })" />
                                        </FieldBody>
                                    </Field>
                                    <Field Horizontal="true">
                                        <FieldLabel ColumnSize="ColumnSize.IsHalf">Max Width Widescreen</FieldLabel>
                                        <FieldBody ColumnSize="ColumnSize.IsHalf">
                                            <Slider TValue="int" Min="10" Max="2000" Step="10"
                                                    Value="@Convert.ToInt32(Theme.ContainerMaxWidthOptions.Widescreen.Replace("px", string.Empty), System.Globalization.CultureInfo.InvariantCulture)"
                                                    ValueChanged="@(x=>{ Theme.ContainerMaxWidthOptions.Widescreen = x.ToString() + "px"; Theme.ThemeHasChanged(); })" />
                                        </FieldBody>
                                    </Field>
                                </CardBody>
                            </Card>
                        </Column>
                        <Column ColumnSize="ColumnSize.IsHalf">
                            <Card>
                                <CardHeader>
                                    <Paragraph Margin="Margin.IsAuto" Color="TextColor.Black50">
                                        <CardTitle>Preview</CardTitle>
                                    </Paragraph>
                                </CardHeader>
                                <CardBody>
                                    Work in Progress...@*TODO*@
                                </CardBody>
                            </Card>
                        </Column>
                    </Row>
                </TabPanel>
                <!-- #endregion Container Options -->
                <!-- #region Divider Options -->
                <TabPanel Name="Divider">
                    <Row>
                        <Column ColumnSize="ColumnSize.IsHalf">
                            <Card>
                                <CardHeader>
                                    <Paragraph Margin="Margin.IsAuto" Color="TextColor.Black50">
                                        <CardTitle>Divider Settings</CardTitle>
                                    </Paragraph>
                                </CardHeader>
                                <CardBody>
                                    <ColorTransparencyEdit Label="Color" Color="@Theme.DividerOptions.Color"
                                                           ColorChanged="@( x => { Theme.DividerOptions.Color = x; Theme.ThemeHasChanged(); })" />
                                    <Field Horizontal="true">
                                        <FieldLabel ColumnSize="ColumnSize.IsHalf">Text Size</FieldLabel>
                                        <FieldBody ColumnSize="ColumnSize.IsHalf">
                                            <Slider TValue="decimal" Min="0.5m" Max="2m" Step="0.125m"
                                                    Value="@Convert.ToDecimal(Theme.DividerOptions.TextSize.Replace("rem", string.Empty), System.Globalization.CultureInfo.InvariantCulture)"
                                                    ValueChanged="@(x=>{ Theme.DividerOptions.TextSize = x.ToString() + "rem"; Theme.ThemeHasChanged(); })" />
                                        </FieldBody>
                                    </Field>
                                    <Field Horizontal="true">
                                        <FieldLabel ColumnSize="ColumnSize.IsHalf">Thickness</FieldLabel>
                                        <FieldBody ColumnSize="ColumnSize.IsHalf">
                                            <Slider TValue="int" Min="1" Max="25" Step="1"
                                                    Value="@Convert.ToInt32(Theme.DividerOptions.Thickness.Replace("px", string.Empty), System.Globalization.CultureInfo.InvariantCulture)"
                                                    ValueChanged="@(x=>{ Theme.DividerOptions.Thickness = x.ToString() + "px"; Theme.ThemeHasChanged(); })" />
                                        </FieldBody>
                                    </Field>
                                </CardBody>
                            </Card>
                        </Column>
                        <Column ColumnSize="ColumnSize.IsHalf">
                            <Card>
                                <CardHeader>
                                    <Paragraph Margin="Margin.IsAuto" Color="TextColor.Black50">
                                        <CardTitle>Preview</CardTitle>
                                    </Paragraph>
                                </CardHeader>
                                <CardBody>
                                    <br /><Divider />
                                    <br /><Divider Type="DividerType.Dashed" />
                                    <br /><Divider Type="DividerType.Dotted" />
                                    <br /><Divider Type="DividerType.TextContent" Text="Example Divider" />
                                    <br />
                                </CardBody>
                            </Card>
                        </Column>
                    </Row>
                </TabPanel>
                <!-- #endregion Divider Options -->
                <!-- #region Dropdown Options -->
                <TabPanel Name="Dropdown">
                    <Row>
                        <Column ColumnSize="ColumnSize.IsHalf">
                            <Card>
                                <CardHeader>
                                    <Paragraph Margin="Margin.IsAuto" Color="TextColor.Black50">
                                        <CardTitle>Dropdown Settings</CardTitle>
                                    </Paragraph>
                                </CardHeader>
                                <CardBody>
                                    <Field Horizontal="true">
                                        <FieldLabel ColumnSize="ColumnSize.IsHalf">Border Radius</FieldLabel>
                                        <FieldBody ColumnSize="ColumnSize.IsHalf">
                                            <Slider TValue="decimal" Min="0m" Max="3m" Step="0.05m"
                                                    Value="@Convert.ToDecimal(Theme.DropdownOptions.BorderRadius.Replace("rem", string.Empty), System.Globalization.CultureInfo.InvariantCulture)"
                                                    ValueChanged="@(x=>{ Theme.DropdownOptions.BorderRadius = x.ToString() + "rem"; Theme.ThemeHasChanged(); })" />
                                        </FieldBody>
                                    </Field>
                                    <Field Horizontal="true">
                                        <FieldLabel ColumnSize="ColumnSize.IsHalf">Gradient Blend Percentage</FieldLabel>
                                        <FieldBody ColumnSize="ColumnSize.IsHalf">
                                            <Slider TValue="float" Min="0f" Max="100f" Step="1f"
                                                    Value="@Theme.DropdownOptions.GradientBlendPercentage"
                                                    ValueChanged="@(x=>{ Theme.DropdownOptions.GradientBlendPercentage = x; Theme.ThemeHasChanged(); })" />
                                        </FieldBody>
                                    </Field>
                                </CardBody>
                            </Card>
                        </Column>
                        <Column ColumnSize="ColumnSize.IsHalf">
                            <Card>
                                <CardHeader>
                                    <Paragraph Margin="Margin.IsAuto" Color="TextColor.Black50">
                                        <CardTitle>Preview</CardTitle>
                                    </Paragraph>
                                </CardHeader>
                                <CardBody>
                                    Work in Progress...@*TODO*@
                                </CardBody>
                            </Card>
                        </Column>
                    </Row>
                </TabPanel>
                <!-- #endregion Dropdown Options -->
                <!-- #region Input Options -->
                <TabPanel Name="Input">
                    <Row>
                        <Column ColumnSize="ColumnSize.IsHalf">
                            <Card>
                                <CardHeader>
                                    <Paragraph Margin="Margin.IsAuto" Color="TextColor.Black50">
                                        <CardTitle>Input Settings</CardTitle>
                                    </Paragraph>
                                </CardHeader>
                                <CardBody>
                                    <Field Horizontal="true">
                                        <FieldLabel ColumnSize="ColumnSize.IsHalf">Border Radius</FieldLabel>
                                        <FieldBody ColumnSize="ColumnSize.IsHalf">
                                            <Slider TValue="decimal" Min="0m" Max="3m" Step="0.05m"
                                                    Value="@Convert.ToDecimal(Theme.InputOptions.BorderRadius.Replace("rem", string.Empty), System.Globalization.CultureInfo.InvariantCulture)"
                                                    ValueChanged="@(x=>{ Theme.InputOptions.BorderRadius = x.ToString() + "rem"; Theme.ThemeHasChanged(); })" />
                                        </FieldBody>
                                    </Field>
                                    <ColorTransparencyEdit Label="Check Color" Color="@Theme.InputOptions.CheckColor"
                                                           ColorChanged="@( x => { Theme.InputOptions.CheckColor = x; Theme.ThemeHasChanged(); })" />
                                    <ColorTransparencyEdit Label="Color" Color="@Theme.InputOptions.Color"
                                                           ColorChanged="@( x => { Theme.InputOptions.Color = x; Theme.ThemeHasChanged(); })" />
                                    <ColorTransparencyEdit Label="Slider Color" Color="@Theme.InputOptions.SliderColor"
                                                           ColorChanged="@( x => { Theme.InputOptions.SliderColor = x; Theme.ThemeHasChanged(); })" />
                                </CardBody>
                            </Card>
                        </Column>
                        <Column ColumnSize="ColumnSize.IsHalf">
                            <Card>
                                <CardHeader>
                                    <Paragraph Margin="Margin.IsAuto" Color="TextColor.Black50">
                                        <CardTitle>Preview</CardTitle>
                                    </Paragraph>
                                </CardHeader>
                                <CardBody>
                                    Work in Progress...@*TODO*@
                                </CardBody>
                            </Card>
                        </Column>
                    </Row>
                </TabPanel>
                <!-- #endregion Input Options -->
                <!-- #region Modal Options -->
                <TabPanel Name="Modal">
                    <Row>
                        <Column ColumnSize="ColumnSize.IsHalf">
                            <Card>
                                <CardHeader>
                                    <Paragraph Margin="Margin.IsAuto" Color="TextColor.Black50">
                                        <CardTitle>Modal Settings</CardTitle>
                                    </Paragraph>
                                </CardHeader>
                                <CardBody>
                                    <Field Horizontal="true">
                                        <FieldLabel ColumnSize="ColumnSize.IsHalf">Border Radius</FieldLabel>
                                        <FieldBody ColumnSize="ColumnSize.IsHalf">
                                            <Slider TValue="decimal" Min="0m" Max="3m" Step="0.05m"
                                                    Value="@Convert.ToDecimal(Theme.ModalOptions.BorderRadius.Replace("rem", string.Empty), System.Globalization.CultureInfo.InvariantCulture)"
                                                    ValueChanged="@(x=>{ Theme.ModalOptions.BorderRadius = x.ToString() + "rem"; Theme.ThemeHasChanged(); })" />
                                        </FieldBody>
                                    </Field>
                                </CardBody>
                            </Card>
                        </Column>
                        <Column ColumnSize="ColumnSize.IsHalf">
                            <Card>
                                <CardHeader>
                                    <Paragraph Margin="Margin.IsAuto" Color="TextColor.Black50">
                                        <CardTitle>Preview</CardTitle>
                                    </Paragraph>
                                </CardHeader>
                                <CardBody>
                                    Work in Progress...@*TODO*@
                                </CardBody>
                            </Card>
                        </Column>
                    </Row>
                </TabPanel>
                <!-- #endregion Modal Options -->
                <!-- #region Pagination Options -->
                <TabPanel Name="Pagination">
                    <Row>
                        <Column ColumnSize="ColumnSize.IsHalf">
                            <Card>
                                <CardHeader>
                                    <Paragraph Margin="Margin.IsAuto" Color="TextColor.Black50">
                                        <CardTitle>Pagination Settings</CardTitle>
                                    </Paragraph>
                                </CardHeader>
                                <CardBody>
                                    <Field Horizontal="true">
                                        <FieldLabel ColumnSize="ColumnSize.IsHalf">Border Radius</FieldLabel>
                                        <FieldBody ColumnSize="ColumnSize.IsHalf">
                                            <Slider TValue="decimal" Min="0m" Max="3m" Step="0.05m"
                                                    Value="@Convert.ToDecimal(Theme.PaginationOptions.BorderRadius.Replace("rem", string.Empty), System.Globalization.CultureInfo.InvariantCulture)"
                                                    ValueChanged="@(x=>{ Theme.PaginationOptions.BorderRadius = x.ToString() + "rem"; Theme.ThemeHasChanged(); })" />
                                        </FieldBody>
                                    </Field>
                                    <Field Horizontal="true">
                                        <FieldLabel ColumnSize="ColumnSize.IsHalf">Large Border Radius</FieldLabel>
                                        <FieldBody ColumnSize="ColumnSize.IsHalf">
                                            <Slider TValue="decimal" Min="0m" Max="3m" Step="0.05m"
                                                    Value="@Convert.ToDecimal(Theme.PaginationOptions.LargeBorderRadius.Replace("rem", string.Empty), System.Globalization.CultureInfo.InvariantCulture)"
                                                    ValueChanged="@(x=>{ Theme.PaginationOptions.LargeBorderRadius = x.ToString() + "rem"; Theme.ThemeHasChanged(); })" />
                                        </FieldBody>
                                    </Field>
                                </CardBody>
                            </Card>
                        </Column>
                        <Column ColumnSize="ColumnSize.IsHalf">
                            <Card>
                                <CardHeader>
                                    <Paragraph Margin="Margin.IsAuto" Color="TextColor.Black50">
                                        <CardTitle>Preview</CardTitle>
                                    </Paragraph>
                                </CardHeader>
                                <CardBody>
                                    Work in Progress...@*TODO*@
                                </CardBody>
                            </Card>
                        </Column>
                    </Row>
                </TabPanel>
                <!-- #endregion Pagination Options -->
                <!-- #region Progress Options -->
                <TabPanel Name="Progress">
                    <Row>
                        <Column ColumnSize="ColumnSize.IsHalf">
                            <Card>
                                <CardHeader>
                                    <Paragraph Margin="Margin.IsAuto" Color="TextColor.Black50">
                                        <CardTitle>Progress Settings</CardTitle>
                                    </Paragraph>
                                </CardHeader>
                                <CardBody>
                                    <Field Horizontal="true">
                                        <FieldLabel ColumnSize="ColumnSize.IsHalf">Border Radius</FieldLabel>
                                        <FieldBody ColumnSize="ColumnSize.IsHalf">
                                            <Slider TValue="decimal" Min="0m" Max="3m" Step="0.05m"
                                                    Value="@Convert.ToDecimal(Theme.ProgressOptions.BorderRadius.Replace("rem", string.Empty), System.Globalization.CultureInfo.InvariantCulture)"
                                                    ValueChanged="@(x=>{ Theme.ProgressOptions.BorderRadius = x.ToString() + "rem"; Theme.ThemeHasChanged(); })" />
                                        </FieldBody>
                                    </Field>
                                </CardBody>
                            </Card>
                        </Column>
                        <Column ColumnSize="ColumnSize.IsHalf">
                            <Card>
                                <CardHeader>
                                    <Paragraph Margin="Margin.IsAuto" Color="TextColor.Black50">
                                        <CardTitle>Preview</CardTitle>
                                    </Paragraph>
                                </CardHeader>
                                <CardBody>
                                    Work in Progress...@*TODO*@
                                </CardBody>
                            </Card>
                        </Column>
                    </Row>
                </TabPanel>
                <!-- #endregion Progress Options -->
                <!-- #region Sidebar Options -->
                <TabPanel Name="Sidebar">
                    <Row>
                        <Column ColumnSize="ColumnSize.IsHalf">
                            <Card>
                                <CardHeader>
                                    <Paragraph Margin="Margin.IsAuto" Color="TextColor.Black50">
                                        <CardTitle>Sidebar Settings</CardTitle>
                                    </Paragraph>
                                </CardHeader>
                                <CardBody>
                                    <ColorTransparencyEdit Label="Background Color" Color="@Theme.SidebarOptions.BackgroundColor"
                                                           ColorChanged="@( x => { Theme.SidebarOptions.BackgroundColor = x; Theme.ThemeHasChanged(); })" />
                                    <ColorTransparencyEdit Label="Color" Color="@Theme.SidebarOptions.Color"
                                                           ColorChanged="@( x => { Theme.SidebarOptions.Color = x; Theme.ThemeHasChanged(); })" />
                                    <Field Horizontal="true">
                                        <FieldLabel ColumnSize="ColumnSize.IsHalf">Width</FieldLabel>
                                        <FieldBody ColumnSize="ColumnSize.IsHalf">
                                            <Slider TValue="int" Min="10" Max="1000" Step="10"
                                                    Value="@Convert.ToInt32(Theme.SidebarOptions.Width.Replace("px", string.Empty), System.Globalization.CultureInfo.InvariantCulture)"
                                                    ValueChanged="@(x=>{ Theme.SidebarOptions.Width = x.ToString() + "px"; Theme.ThemeHasChanged(); })" />
                                        </FieldBody>
                                    </Field>
                                </CardBody>
                            </Card>
                        </Column>
                        <Column ColumnSize="ColumnSize.IsHalf">
                            <Card>
                                <CardHeader>
                                    <Paragraph Margin="Margin.IsAuto" Color="TextColor.Black50">
                                        <CardTitle>Preview</CardTitle>
                                    </Paragraph>
                                </CardHeader>
                                <CardBody>
                                    Changes are applied instantly to the component, if available
                                </CardBody>
                            </Card>
                        </Column>
                    </Row>
                </TabPanel>
                <!-- #endregion Sidebar Options -->
                <!-- #region Snackbar Options -->
                <TabPanel Name="Snackbar">
                    <Row>
                        <Column ColumnSize="ColumnSize.IsHalf">
                            <Card>
                                <CardHeader>
                                    <Paragraph Margin="Margin.IsAuto" Color="TextColor.Black50">
                                        <CardTitle>Snackbar Settings</CardTitle>
                                    </Paragraph>
                                </CardHeader>
                                <CardBody>
                                    <ColorTransparencyEdit Label="Background Color" Color="@Theme.SnackbarOptions.BackgroundColor"
                                                           ColorChanged="@( x => { Theme.SnackbarOptions.BackgroundColor = x; Theme.ThemeHasChanged(); })" />
                                    <ColorTransparencyEdit Label="Button Color" Color="@Theme.SnackbarOptions.ButtonColor"
                                                           ColorChanged="@( x => { Theme.SnackbarOptions.ButtonColor = x; Theme.ThemeHasChanged(); })" />
                                    <ColorTransparencyEdit Label="Button Hover Color" Color="@Theme.SnackbarOptions.ButtonHoverColor"
                                                           ColorChanged="@( x => { Theme.SnackbarOptions.ButtonHoverColor = x; Theme.ThemeHasChanged(); })" />
                                    <ColorTransparencyEdit Label="Text Color" Color="@Theme.SnackbarOptions.TextColor"
                                                           ColorChanged="@( x => { Theme.SnackbarOptions.TextColor = x; Theme.ThemeHasChanged(); })" />
                                    <Field Horizontal="true">
                                        <FieldLabel ColumnSize="ColumnSize.IsHalf">Variant Background Color Level</FieldLabel>
                                        <FieldBody ColumnSize="ColumnSize.IsHalf">
                                            <Slider TValue="int" Min="-10" Max="10" Step="1"
                                                    Value="@Theme.SnackbarOptions.VariantBackgroundColorLevel"
                                                    ValueChanged="@(x=>{ Theme.SnackbarOptions.VariantBackgroundColorLevel = x; Theme.ThemeHasChanged(); })" />
                                        </FieldBody>
                                    </Field>
                                </CardBody>
                            </Card>
                        </Column>
                        <Column ColumnSize="ColumnSize.IsHalf">
                            <Card>
                                <CardHeader>
                                    <Paragraph Margin="Margin.IsAuto" Color="TextColor.Black50">
                                        <CardTitle>Preview</CardTitle>
                                    </Paragraph>
                                </CardHeader>
                                <CardBody>
                                    Work in Progress...@*TODO*@
                                </CardBody>
                            </Card>
                        </Column>
                    </Row>
                </TabPanel>
                <!-- #endregion Snackbar Options -->
                <!-- #region Table Options -->
                <TabPanel Name="Table">
                    <Row>
                        <Column ColumnSize="ColumnSize.IsHalf">
                            <Card>
                                <CardHeader>
                                    <Paragraph Margin="Margin.IsAuto" Color="TextColor.Black50">
                                        <CardTitle>Table Settings</CardTitle>
                                    </Paragraph>
                                </CardHeader>
                                <CardBody>
                                    <Field Horizontal="true">
                                        <FieldLabel ColumnSize="ColumnSize.IsHalf">Background Level</FieldLabel>
                                        <FieldBody ColumnSize="ColumnSize.IsHalf">
                                            <Slider TValue="int" Min="-20" Max="0" Step="1"
                                                    Value="@Theme.TableOptions.BackgroundLevel"
                                                    ValueChanged="@(x=>{ Theme.TableOptions.BackgroundLevel = x; Theme.ThemeHasChanged(); })" />
                                        </FieldBody>
                                    </Field>
                                    <Field Horizontal="true">
                                        <FieldLabel ColumnSize="ColumnSize.IsHalf">Border Level</FieldLabel>
                                        <FieldBody ColumnSize="ColumnSize.IsHalf">
                                            <Slider TValue="int" Min="-20" Max="0" Step="1"
                                                    Value="@Theme.TableOptions.BorderLevel"
                                                    ValueChanged="@(x=>{ Theme.TableOptions.BorderLevel = x; Theme.ThemeHasChanged(); })" />
                                        </FieldBody>
                                    </Field>
                                    <Field Horizontal="true">
                                        <FieldLabel ColumnSize="ColumnSize.IsHalf">Border Radius</FieldLabel>
                                        <FieldBody ColumnSize="ColumnSize.IsHalf">
                                            <Slider TValue="decimal" Min="0m" Max="3m" Step="0.05m"
                                                    Value="@Convert.ToDecimal(Theme.TableOptions.BorderRadius.Replace("rem", string.Empty), System.Globalization.CultureInfo.InvariantCulture)"
                                                    ValueChanged="@(x=>{ Theme.TableOptions.BorderRadius = x.ToString() + "rem"; Theme.ThemeHasChanged(); })" />
                                        </FieldBody>
                                    </Field>
                                </CardBody>
                            </Card>
                        </Column>
                        <Column ColumnSize="ColumnSize.IsHalf">
                            <Card>
                                <CardHeader>
                                    <Paragraph Margin="Margin.IsAuto" Color="TextColor.Black50">
                                        <CardTitle>Preview</CardTitle>
                                    </Paragraph>
                                </CardHeader>
                                <CardBody>
                                    Work in Progress...@*TODO*@
                                </CardBody>
                            </Card>
                        </Column>
                    </Row>
                </TabPanel>
                <!-- #endregion Table Options -->
                <!-- #region Tabs Options -->
                <TabPanel Name="Tabs">
                    <Row>
                        <Column ColumnSize="ColumnSize.IsHalf">
                            <Card>
                                <CardHeader>
                                    <Paragraph Margin="Margin.IsAuto" Color="TextColor.Black50">
                                        <CardTitle>Tabs Settings</CardTitle>
                                    </Paragraph>
                                </CardHeader>
                                <CardBody>
                                    <Field Horizontal="true">
                                        <FieldLabel ColumnSize="ColumnSize.IsHalf">Border Radius</FieldLabel>
                                        <FieldBody ColumnSize="ColumnSize.IsHalf">
                                            <Slider TValue="decimal" Min="0m" Max="3m" Step="0.05m"
                                                    Value="@Convert.ToDecimal(Theme.TabsOptions.BorderRadius.Replace("rem", string.Empty), System.Globalization.CultureInfo.InvariantCulture)"
                                                    ValueChanged="@(x=>{ Theme.TabsOptions.BorderRadius = x.ToString() + "rem"; Theme.ThemeHasChanged(); })" />
                                        </FieldBody>
                                    </Field>
                                </CardBody>
                            </Card>
                        </Column>
                        <Column ColumnSize="ColumnSize.IsHalf">
                            <Card>
                                <CardHeader>
                                    <Paragraph Margin="Margin.IsAuto" Color="TextColor.Black50">
                                        <CardTitle>Preview</CardTitle>
                                    </Paragraph>
                                </CardHeader>
                                <CardBody>
                                    Work in Progress...@*TODO*@
                                </CardBody>
                            </Card>
                        </Column>
                    </Row>
                </TabPanel>
                <!-- #endregion Tabs Options -->
                <!-- #region Text Options -->
                <TabPanel Name="Text">
                    <Row>
                        <Column ColumnSize="ColumnSize.IsHalf">
                            <Card>
                                <CardHeader>
                                    <Paragraph Margin="Margin.IsAuto" Color="TextColor.Black50">
                                        <CardTitle>Text Settings</CardTitle>
                                    </Paragraph>
                                </CardHeader>
                                <CardBody>
                                    <ColorTransparencyEdit Label="Black 50 Color" Color="@Theme.TextColorOptions.Black50"
                                                           ColorChanged="@( x => { Theme.TextColorOptions.Black50 = x; Theme.ThemeHasChanged(); })" />
                                    <ColorTransparencyEdit Label="Body Color" Color="@Theme.TextColorOptions.Body"
                                                           ColorChanged="@( x => { Theme.TextColorOptions.Body = x; Theme.ThemeHasChanged(); })" />
                                    <ColorTransparencyEdit Label="Danger Color" Color="@Theme.TextColorOptions.Danger"
                                                           ColorChanged="@( x => { Theme.TextColorOptions.Danger = x; Theme.ThemeHasChanged(); })" />
                                    <ColorTransparencyEdit Label="Dark Color" Color="@Theme.TextColorOptions.Dark"
                                                           ColorChanged="@( x => { Theme.TextColorOptions.Dark = x; Theme.ThemeHasChanged(); })" />
                                    <ColorTransparencyEdit Label="Info Color" Color="@Theme.TextColorOptions.Info"
                                                           ColorChanged="@( x => { Theme.TextColorOptions.Info = x; Theme.ThemeHasChanged(); })" />
                                    <ColorTransparencyEdit Label="Light Color" Color="@Theme.TextColorOptions.Light"
                                                           ColorChanged="@( x => { Theme.TextColorOptions.Light = x; Theme.ThemeHasChanged(); })" />
                                    <ColorTransparencyEdit Label="Muted Color" Color="@Theme.TextColorOptions.Muted"
                                                           ColorChanged="@( x => { Theme.TextColorOptions.Muted = x; Theme.ThemeHasChanged(); })" />
                                    <ColorTransparencyEdit Label="Primary Color" Color="@Theme.TextColorOptions.Primary"
                                                           ColorChanged="@( x => { Theme.TextColorOptions.Primary = x; Theme.ThemeHasChanged(); })" />
                                    <ColorTransparencyEdit Label="Secondary Color" Color="@Theme.TextColorOptions.Secondary"
                                                           ColorChanged="@( x => { Theme.TextColorOptions.Secondary = x; Theme.ThemeHasChanged(); })" />
                                    <ColorTransparencyEdit Label="Success Color" Color="@Theme.TextColorOptions.Success"
                                                           ColorChanged="@( x => { Theme.TextColorOptions.Success = x; Theme.ThemeHasChanged(); })" />
                                    <ColorTransparencyEdit Label="Warning Color" Color="@Theme.TextColorOptions.Warning"
                                                           ColorChanged="@( x => { Theme.TextColorOptions.Warning = x; Theme.ThemeHasChanged(); })" />
                                    <ColorTransparencyEdit Label="White Color" Color="@Theme.TextColorOptions.White"
                                                           ColorChanged="@( x => { Theme.TextColorOptions.White = x; Theme.ThemeHasChanged(); })" />
                                    <ColorTransparencyEdit Label="White 50 Color" Color="@Theme.TextColorOptions.White50"
                                                           ColorChanged="@( x => { Theme.TextColorOptions.White50 = x; Theme.ThemeHasChanged(); })" />
                                </CardBody>
                            </Card>
                        </Column>
                        <Column ColumnSize="ColumnSize.IsHalf">
                            <Card>
                                <CardHeader>
                                    <Paragraph Margin="Margin.IsAuto" Color="TextColor.Black50">
                                        <CardTitle>Preview</CardTitle>
                                    </Paragraph>
                                </CardHeader>
                                <CardBody>
                                    Work in Progress...@*TODO*@
                                </CardBody>
                            </Card>
                        </Column>
                    </Row>
                </TabPanel>
                <!-- #endregion Text Options -->
                <!-- #region Tooltip Options -->
                <TabPanel Name="Tooltip">
                    <Row>
                        <Column ColumnSize="ColumnSize.IsHalf">
                            <Card>
                                <CardHeader>
                                    <Paragraph Margin="Margin.IsAuto" Color="TextColor.Black50">
                                        <CardTitle>Tooltip Settings</CardTitle>
                                    </Paragraph>
                                </CardHeader>
                                <CardBody>
                                    <ColorTransparencyEdit Label="Background Color" Color="@Theme.TooltipOptions.BackgroundColor"
                                                           ColorChanged="@( x => { Theme.TooltipOptions.BackgroundColor = x; Theme.ThemeHasChanged(); })" />
                                    <Field Horizontal="true">
                                        <FieldLabel ColumnSize="ColumnSize.IsHalf">Background Opacity</FieldLabel>
                                        <FieldBody ColumnSize="ColumnSize.IsHalf">
                                            <Slider TValue="float?" Min="0f" Max="100f" Step="1f"
                                                    Value="@Theme.TooltipOptions.BackgroundOpacity"
                                                    ValueChanged="@(x=>{ Theme.TooltipOptions.BackgroundOpacity = x; Theme.ThemeHasChanged(); })" />
                                        </FieldBody>
                                    </Field>
                                    <Field Horizontal="true">
                                        <FieldLabel ColumnSize="ColumnSize.IsHalf">Border Radius</FieldLabel>
                                        <FieldBody ColumnSize="ColumnSize.IsHalf">
                                            <Slider TValue="decimal" Min="0m" Max="3m" Step="0.05m"
                                                    Value="@Convert.ToDecimal(Theme.TooltipOptions.BorderRadius.Replace("rem", string.Empty), System.Globalization.CultureInfo.InvariantCulture)"
                                                    ValueChanged="@(x=>{ Theme.TooltipOptions.BorderRadius = x.ToString() + "rem"; Theme.ThemeHasChanged(); })" />
                                        </FieldBody>
                                    </Field>
                                    <ColorTransparencyEdit Label="Color" Color="@Theme.TooltipOptions.Color"
                                                           ColorChanged="@( x => { Theme.TooltipOptions.Color = x; Theme.ThemeHasChanged(); })" />
                                    <Field Horizontal="true">
                                        <FieldLabel ColumnSize="ColumnSize.IsHalf">Fade Time</FieldLabel>
                                        <FieldBody ColumnSize="ColumnSize.IsHalf">
                                            <Slider TValue="decimal" Min="0m" Max="10m" Step="0.05m"
                                                    Value="@Convert.ToDecimal(Theme.TooltipOptions.FadeTime.Replace("s", string.Empty), System.Globalization.CultureInfo.InvariantCulture)"
                                                    ValueChanged="@(x=>{ Theme.TooltipOptions.FadeTime = x.ToString() + "s"; Theme.ThemeHasChanged(); })" />
                                        </FieldBody>
                                    </Field>
                                    <Field Horizontal="true">
                                        <FieldLabel ColumnSize="ColumnSize.IsHalf">Font Size</FieldLabel>
                                        <FieldBody ColumnSize="ColumnSize.IsHalf">
                                            <Slider TValue="decimal" Min="0.125m" Max="7m" Step="0.125m"
                                                    Value="@Convert.ToDecimal(Theme.TooltipOptions.FontSize.Replace("rem", string.Empty), System.Globalization.CultureInfo.InvariantCulture)"
                                                    ValueChanged="@(x=>{ Theme.TooltipOptions.FontSize = x.ToString() + "rem"; Theme.ThemeHasChanged(); })" />
                                        </FieldBody>
                                    </Field>
                                    <Field Horizontal="true">
                                        <FieldLabel ColumnSize="ColumnSize.IsHalf">Max Width</FieldLabel>
                                        <FieldBody ColumnSize="ColumnSize.IsHalf">
                                            <Slider TValue="decimal" Min="1m" Max="30m" Step="1m"
                                                    Value="@Convert.ToDecimal(Theme.TooltipOptions.MaxWidth.Replace("rem", string.Empty), System.Globalization.CultureInfo.InvariantCulture)"
                                                    ValueChanged="@(x=>{ Theme.TooltipOptions.MaxWidth = x.ToString() + "rem"; Theme.ThemeHasChanged(); })" />
                                        </FieldBody>
                                    </Field>
                                    <Field Horizontal="true">
                                        <FieldLabel ColumnSize="ColumnSize.IsHalf">Top Padding</FieldLabel>
                                        <FieldBody ColumnSize="ColumnSize.IsHalf">
                                            <Slider TValue="decimal" Min="0.0625m" Max="5m" Step="0.0625m"
                                                    Value="@Convert.ToDecimal(Theme.TooltipOptions.Padding.Split(" ")[0].Replace("rem", string.Empty), System.Globalization.CultureInfo.InvariantCulture)"
                                                    ValueChanged="@(x=>{ Theme.TooltipOptions.Padding = string.Join(" ",
                                                        x.ToString() + "rem",
                                                        Theme.TooltipOptions.Padding.Split(" ")[1],
                                                        Theme.TooltipOptions.Padding.Split(" ")[2],
                                                        Theme.TooltipOptions.Padding.Split(" ")[3]);
                                                        Theme.ThemeHasChanged(); })" />
                                        </FieldBody>
                                    </Field>
                                    <Field Horizontal="true">
                                        <FieldLabel ColumnSize="ColumnSize.IsHalf">Right Padding</FieldLabel>
                                        <FieldBody ColumnSize="ColumnSize.IsHalf">
                                            <Slider TValue="decimal" Min="0.0625m" Max="5m" Step="0.0625m"
                                                    Value="@Convert.ToDecimal(Theme.TooltipOptions.Padding.Split(" ")[1].Replace("rem", string.Empty), System.Globalization.CultureInfo.InvariantCulture)"
                                                    ValueChanged="@(x=>{ Theme.TooltipOptions.Padding = string.Join(" ",
                                                        Theme.TooltipOptions.Padding.Split(" ")[0],
                                                        x.ToString() + "rem",
                                                        Theme.TooltipOptions.Padding.Split(" ")[2],
                                                        Theme.TooltipOptions.Padding.Split(" ")[3]);
                                                        Theme.ThemeHasChanged(); })" />
                                        </FieldBody>
                                    </Field>
                                    <Field Horizontal="true">
                                        <FieldLabel ColumnSize="ColumnSize.IsHalf">Bottom Padding</FieldLabel>
                                        <FieldBody ColumnSize="ColumnSize.IsHalf">
                                            <Slider TValue="decimal" Min="0.0625m" Max="5m" Step="0.0625m"
                                                    Value="@Convert.ToDecimal(Theme.TooltipOptions.Padding.Split(" ")[2].Replace("rem", string.Empty), System.Globalization.CultureInfo.InvariantCulture)"
                                                    ValueChanged="@(x=>{ Theme.TooltipOptions.Padding = string.Join(" ",
                                                        Theme.TooltipOptions.Padding.Split(" ")[0],
                                                        Theme.TooltipOptions.Padding.Split(" ")[1],
                                                        x.ToString() + "rem",
                                                        Theme.TooltipOptions.Padding.Split(" ")[3]);
                                                        Theme.ThemeHasChanged(); })" />
                                        </FieldBody>
                                    </Field>
                                    <Field Horizontal="true">
                                        <FieldLabel ColumnSize="ColumnSize.IsHalf">Left Padding</FieldLabel>
                                        <FieldBody ColumnSize="ColumnSize.IsHalf">
                                            <Slider TValue="decimal" Min="0.0625m" Max="5m" Step="0.0625m"
                                                    Value="@Convert.ToDecimal(Theme.TooltipOptions.Padding.Split(" ")[3].Replace("rem", string.Empty), System.Globalization.CultureInfo.InvariantCulture)"
                                                    ValueChanged="@(x=>{ Theme.TooltipOptions.Padding = string.Join(" ",
                                                        Theme.TooltipOptions.Padding.Split(" ")[0],
                                                        Theme.TooltipOptions.Padding.Split(" ")[1],
                                                        Theme.TooltipOptions.Padding.Split(" ")[2],
                                                        x.ToString() + "rem");
                                                        Theme.ThemeHasChanged(); })" />
                                        </FieldBody>
                                    </Field>
                                    <Field Horizontal="true">
                                        <FieldLabel ColumnSize="ColumnSize.IsHalf">Z Index</FieldLabel>
                                        <FieldBody ColumnSize="ColumnSize.IsHalf">
                                            <Slider TValue="int" Min="0" Max="5100" Step="255"
                                                    Value="@Convert.ToInt32(Theme.TooltipOptions.ZIndex, System.Globalization.CultureInfo.InvariantCulture)"
                                                    ValueChanged="@(x=>{ Theme.TooltipOptions.ZIndex = x.ToString(); Theme.ThemeHasChanged(); })" />
                                        </FieldBody>
                                    </Field>
                                </CardBody>
                            </Card>
                        </Column>
                        <Column ColumnSize="ColumnSize.IsHalf">
                            <Card>
                                <CardHeader>
                                    <Paragraph Margin="Margin.IsAuto" Color="TextColor.Black50">
                                        <CardTitle>Preview</CardTitle>
                                    </Paragraph>
                                </CardHeader>
                                <CardBody>
                                    Work in Progress...@*TODO*@
                                </CardBody>
                            </Card>
                        </Column>
                    </Row>
                </TabPanel>
                <!-- #endregion Tooltip Options -->
            </Content>
        </Tabs>
    </CardBody>
</Card>