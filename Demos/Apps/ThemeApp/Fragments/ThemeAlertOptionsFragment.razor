@namespace ThemeApp

<Row>
    <Column ColumnSize="ColumnSize.IsHalf">
        <Card>
            <CardHeader>
                <Paragraph Margin="Margin.IsAuto" Color="TextColor.Black50">
                    <CardTitle>Alert Settings</CardTitle>
                </Paragraph>
            </CardHeader>
            <CardBody>
                <Field Horizontal="true">
                    <FieldLabel ColumnSize="ColumnSize.IsHalf">Background Level</FieldLabel>
                    <FieldBody ColumnSize="ColumnSize.IsHalf">
                        <Slider TValue="int" Min="-12" Max="12" Step="1"
                                Value="@Theme.AlertOptions.BackgroundLevel"
                                ValueChanged="@(x=>{ Theme.AlertOptions.BackgroundLevel = x; Theme.ThemeHasChanged(); })" />
                    </FieldBody>
                </Field>
                <Field Horizontal="true">
                    <FieldLabel ColumnSize="ColumnSize.IsHalf">Border Level</FieldLabel>
                    <FieldBody ColumnSize="ColumnSize.IsHalf">
                        <Slider TValue="int" Min="-12" Max="12" Step="1"
                                Value="@Theme.AlertOptions.BorderLevel"
                                ValueChanged="@(x=>{ Theme.AlertOptions.BorderLevel = x; Theme.ThemeHasChanged(); })" />
                    </FieldBody>
                </Field>
                <Field Horizontal="true">
                    <FieldLabel ColumnSize="ColumnSize.IsHalf">Border Radius</FieldLabel>
                    <FieldBody ColumnSize="ColumnSize.IsHalf">
                        <Slider TValue="decimal" Min="0m" Max="3m" Step="0.05m"
                                Value="@Convert.ToDecimal(Theme.AlertOptions.BorderRadius.Replace("rem", string.Empty), System.Globalization.CultureInfo.InvariantCulture)"
                                ValueChanged="@(x=>{ Theme.AlertOptions.BorderRadius = x.ToString() + "rem"; Theme.ThemeHasChanged(); })" />
                    </FieldBody>
                </Field>
                <Field Horizontal="true">
                    <FieldLabel ColumnSize="ColumnSize.IsHalf">Color Level</FieldLabel>
                    <FieldBody ColumnSize="ColumnSize.IsHalf">
                        <Slider TValue="int" Min="-12" Max="12" Step="1"
                                Value="@Theme.AlertOptions.ColorLevel"
                                ValueChanged="@(x=>{ Theme.AlertOptions.ColorLevel = x; Theme.ThemeHasChanged(); })" />
                    </FieldBody>
                </Field>
                <Field Horizontal="true">
                    <FieldLabel ColumnSize="ColumnSize.IsHalf">Gradient Blend Percentage</FieldLabel>
                    <FieldBody ColumnSize="ColumnSize.IsHalf">
                        <Slider TValue="float" Min="0f" Max="100f" Step="1f"
                                Value="@Theme.AlertOptions.GradientBlendPercentage"
                                ValueChanged="@(x=>{ Theme.AlertOptions.GradientBlendPercentage = x; Theme.ThemeHasChanged(); })" />
                    </FieldBody>
                </Field>
            </CardBody>
        </Card>
    </Column>
    <Column ColumnSize="ColumnSize.IsHalf">
        <Card>
            <CardHeader>
                <Paragraph Margin="Margin.IsAuto" Color="TextColor.Black50">
                    <CardTitle>Preview</CardTitle>
                </Paragraph>
            </CardHeader>
            <CardBody>
                <Alert Color="Color.Success" Visible="@AlertSuccessVisible" Dismisable="true">
                    <AlertMessage><Icon Name="@IconName.Check" Margin="Margin.Is2.FromRight" />Success!</AlertMessage>
                    <CloseButton Clicked="@(()=>AlertSuccessVisible = false)" /><br />
                    <AlertDescription>This is a success alert</AlertDescription>
                </Alert>
                <Alert Color="Color.Info" Visible="@AlertInformationVisible" Dismisable="true">
                    <AlertMessage><Icon Name="@IconName.Info" Margin="Margin.Is2.FromRight" />Information:</AlertMessage>
                    <CloseButton Clicked="@(()=>AlertInformationVisible = false)" /><br />
                    <AlertDescription>This is an information alert</AlertDescription>
                </Alert>
                <Alert Color="Color.Warning" Visible="@AlertWarningVisible" Dismisable="true">
                    <AlertMessage><Icon Name="@IconName.ExclamationTriangle" Margin="Margin.Is2.FromRight" />Warning!</AlertMessage>
                    <CloseButton Clicked="@(()=>AlertWarningVisible = false)" /><br />
                    <AlertDescription>This is a warning alert</AlertDescription>
                </Alert>
                <Alert Color="Color.Danger" Visible="@AlertErrorVisible" Dismisable="true">
                    <AlertMessage><Icon Name="@IconName.TimesCircle" Margin="Margin.Is2.FromRight" />Error!</AlertMessage>
                    <CloseButton Clicked="@(()=>AlertErrorVisible = false)" /><br />
                    <AlertDescription>This is an error alert</AlertDescription>
                </Alert>
                <Button Color="Color.Secondary" Clicked="@(()=>{ AlertSuccessVisible = AlertInformationVisible = AlertWarningVisible = AlertErrorVisible = true; })">
                    <Icon Name="@IconName.Sync" Margin="Margin.Is3.FromRight" />Reset
                </Button>
            </CardBody>
        </Card>
    </Column>
</Row>
