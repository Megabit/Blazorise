<div id="test-selector">
    Select test:
    <select @bind=@SelectedComponentTypeName>
        <option value="none">Choose...</option>
        @foreach ( var component in components.OrderBy( x => x ) )
        {
            <option value='@($"BasicTestApp.Client.{component}")'>@component</option>
        }

    </select>

    @if ( SelectedComponentType != null )
    {
        <span id="source-info"><code><tt>@(SelectedComponentType.Name.Replace( ".", "/" )).cshtml</tt></code></span>
    }
    <hr />
</div>

<app>
    @((RenderFragment)RenderSelectedComponent)
</app>

@code {
    string[] components =
    {
        "ElementIdComponent",
        "TextOnlyComponent",
        "ButtonComponent",
        "ButtonOnlyComponent",
        "DropdownComponent",
        "NumericEditComponent",
        "TextEditComponent",
        "SelectComponent",
        "SelectNavigationsComponent",
        "ValidateNumericEditComponent",
        "ValidateTextEditComponent",
        "ValidateSelectComponent",
        "ValidateAnnotationsComponent",
        "AsyncValidateTextEditComponent",
        "ButtonComponent",
        "CloseButtonComponent",
        "TabsComponent",
        "RadioGroupComponent",
        "DateEditComponent",
        "DatePickerComponent",
        "DateEditComponent",
        "DataGridComponent",
        "DataGridMultiSelectComponent",
        "DataGridDetailRowComponent",
        "DataGridAggregateRowComponent",
        "AutocompleteComponent",
        "AutocompleteMultipleComponent",
        "AutocompleteReadDataComponent",
        "AutocompleteMultipleReadDataComponent",
        "AutocompleteCheckboxComponent"
    };
    string SelectedComponentTypeName { get; set; } = "none";

    Type SelectedComponentType
        => SelectedComponentTypeName == "none" ? null : Type.GetType( SelectedComponentTypeName );

    void RenderSelectedComponent( RenderTreeBuilder builder )
    {
        if ( SelectedComponentType != null )
        {
            builder.OpenComponent( 0, SelectedComponentType );
            builder.CloseComponent();
        }
    }
}
